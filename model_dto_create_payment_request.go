/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreatePaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreatePaymentRequest{}

// DtoCreatePaymentRequest struct for DtoCreatePaymentRequest
type DtoCreatePaymentRequest struct {
	Amount float32 `json:"amount"`
	Currency string `json:"currency"`
	DestinationId string `json:"destination_id"`
	DestinationType TypesPaymentDestinationType `json:"destination_type"`
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	PaymentMethodId *string `json:"payment_method_id,omitempty"`
	PaymentMethodType TypesPaymentMethodType `json:"payment_method_type"`
	ProcessPayment *bool `json:"process_payment,omitempty"`
}

type _DtoCreatePaymentRequest DtoCreatePaymentRequest

// NewDtoCreatePaymentRequest instantiates a new DtoCreatePaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreatePaymentRequest(amount float32, currency string, destinationId string, destinationType TypesPaymentDestinationType, paymentMethodType TypesPaymentMethodType) *DtoCreatePaymentRequest {
	this := DtoCreatePaymentRequest{}
	this.Amount = amount
	this.Currency = currency
	this.DestinationId = destinationId
	this.DestinationType = destinationType
	this.PaymentMethodType = paymentMethodType
	var processPayment bool = true
	this.ProcessPayment = &processPayment
	return &this
}

// NewDtoCreatePaymentRequestWithDefaults instantiates a new DtoCreatePaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreatePaymentRequestWithDefaults() *DtoCreatePaymentRequest {
	this := DtoCreatePaymentRequest{}
	var processPayment bool = true
	this.ProcessPayment = &processPayment
	return &this
}

// GetAmount returns the Amount field value
func (o *DtoCreatePaymentRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DtoCreatePaymentRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *DtoCreatePaymentRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *DtoCreatePaymentRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetDestinationId returns the DestinationId field value
func (o *DtoCreatePaymentRequest) GetDestinationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationId
}

// GetDestinationIdOk returns a tuple with the DestinationId field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetDestinationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationId, true
}

// SetDestinationId sets field value
func (o *DtoCreatePaymentRequest) SetDestinationId(v string) {
	o.DestinationId = v
}

// GetDestinationType returns the DestinationType field value
func (o *DtoCreatePaymentRequest) GetDestinationType() TypesPaymentDestinationType {
	if o == nil {
		var ret TypesPaymentDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetDestinationTypeOk() (*TypesPaymentDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *DtoCreatePaymentRequest) SetDestinationType(v TypesPaymentDestinationType) {
	o.DestinationType = v
}

// GetIdempotencyKey returns the IdempotencyKey field value if set, zero value otherwise.
func (o *DtoCreatePaymentRequest) GetIdempotencyKey() string {
	if o == nil || IsNil(o.IdempotencyKey) {
		var ret string
		return ret
	}
	return *o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IdempotencyKey) {
		return nil, false
	}
	return o.IdempotencyKey, true
}

// HasIdempotencyKey returns a boolean if a field has been set.
func (o *DtoCreatePaymentRequest) HasIdempotencyKey() bool {
	if o != nil && !IsNil(o.IdempotencyKey) {
		return true
	}

	return false
}

// SetIdempotencyKey gets a reference to the given string and assigns it to the IdempotencyKey field.
func (o *DtoCreatePaymentRequest) SetIdempotencyKey(v string) {
	o.IdempotencyKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreatePaymentRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreatePaymentRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreatePaymentRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise.
func (o *DtoCreatePaymentRequest) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodId) {
		return nil, false
	}
	return o.PaymentMethodId, true
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *DtoCreatePaymentRequest) HasPaymentMethodId() bool {
	if o != nil && !IsNil(o.PaymentMethodId) {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given string and assigns it to the PaymentMethodId field.
func (o *DtoCreatePaymentRequest) SetPaymentMethodId(v string) {
	o.PaymentMethodId = &v
}

// GetPaymentMethodType returns the PaymentMethodType field value
func (o *DtoCreatePaymentRequest) GetPaymentMethodType() TypesPaymentMethodType {
	if o == nil {
		var ret TypesPaymentMethodType
		return ret
	}

	return o.PaymentMethodType
}

// GetPaymentMethodTypeOk returns a tuple with the PaymentMethodType field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetPaymentMethodTypeOk() (*TypesPaymentMethodType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodType, true
}

// SetPaymentMethodType sets field value
func (o *DtoCreatePaymentRequest) SetPaymentMethodType(v TypesPaymentMethodType) {
	o.PaymentMethodType = v
}

// GetProcessPayment returns the ProcessPayment field value if set, zero value otherwise.
func (o *DtoCreatePaymentRequest) GetProcessPayment() bool {
	if o == nil || IsNil(o.ProcessPayment) {
		var ret bool
		return ret
	}
	return *o.ProcessPayment
}

// GetProcessPaymentOk returns a tuple with the ProcessPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePaymentRequest) GetProcessPaymentOk() (*bool, bool) {
	if o == nil || IsNil(o.ProcessPayment) {
		return nil, false
	}
	return o.ProcessPayment, true
}

// HasProcessPayment returns a boolean if a field has been set.
func (o *DtoCreatePaymentRequest) HasProcessPayment() bool {
	if o != nil && !IsNil(o.ProcessPayment) {
		return true
	}

	return false
}

// SetProcessPayment gets a reference to the given bool and assigns it to the ProcessPayment field.
func (o *DtoCreatePaymentRequest) SetProcessPayment(v bool) {
	o.ProcessPayment = &v
}

func (o DtoCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreatePaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["currency"] = o.Currency
	toSerialize["destination_id"] = o.DestinationId
	toSerialize["destination_type"] = o.DestinationType
	if !IsNil(o.IdempotencyKey) {
		toSerialize["idempotency_key"] = o.IdempotencyKey
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PaymentMethodId) {
		toSerialize["payment_method_id"] = o.PaymentMethodId
	}
	toSerialize["payment_method_type"] = o.PaymentMethodType
	if !IsNil(o.ProcessPayment) {
		toSerialize["process_payment"] = o.ProcessPayment
	}
	return toSerialize, nil
}

func (o *DtoCreatePaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"currency",
		"destination_id",
		"destination_type",
		"payment_method_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreatePaymentRequest := _DtoCreatePaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreatePaymentRequest)

	if err != nil {
		return err
	}

	*o = DtoCreatePaymentRequest(varDtoCreatePaymentRequest)

	return err
}

type NullableDtoCreatePaymentRequest struct {
	value *DtoCreatePaymentRequest
	isSet bool
}

func (v NullableDtoCreatePaymentRequest) Get() *DtoCreatePaymentRequest {
	return v.value
}

func (v *NullableDtoCreatePaymentRequest) Set(val *DtoCreatePaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreatePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreatePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreatePaymentRequest(val *DtoCreatePaymentRequest) *NullableDtoCreatePaymentRequest {
	return &NullableDtoCreatePaymentRequest{value: val, isSet: true}
}

func (v NullableDtoCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreatePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


