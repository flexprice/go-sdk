/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
)

// checks if the DtoPaymentAttemptResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoPaymentAttemptResponse{}

// DtoPaymentAttemptResponse struct for DtoPaymentAttemptResponse
type DtoPaymentAttemptResponse struct {
	AttemptNumber *int32 `json:"attempt_number,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	ErrorMessage *string `json:"error_message,omitempty"`
	Id *string `json:"id,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	PaymentId *string `json:"payment_id,omitempty"`
	TenantId *string `json:"tenant_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
}

// NewDtoPaymentAttemptResponse instantiates a new DtoPaymentAttemptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoPaymentAttemptResponse() *DtoPaymentAttemptResponse {
	this := DtoPaymentAttemptResponse{}
	return &this
}

// NewDtoPaymentAttemptResponseWithDefaults instantiates a new DtoPaymentAttemptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoPaymentAttemptResponseWithDefaults() *DtoPaymentAttemptResponse {
	this := DtoPaymentAttemptResponse{}
	return &this
}

// GetAttemptNumber returns the AttemptNumber field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetAttemptNumber() int32 {
	if o == nil || IsNil(o.AttemptNumber) {
		var ret int32
		return ret
	}
	return *o.AttemptNumber
}

// GetAttemptNumberOk returns a tuple with the AttemptNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetAttemptNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.AttemptNumber) {
		return nil, false
	}
	return o.AttemptNumber, true
}

// HasAttemptNumber returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasAttemptNumber() bool {
	if o != nil && !IsNil(o.AttemptNumber) {
		return true
	}

	return false
}

// SetAttemptNumber gets a reference to the given int32 and assigns it to the AttemptNumber field.
func (o *DtoPaymentAttemptResponse) SetAttemptNumber(v int32) {
	o.AttemptNumber = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DtoPaymentAttemptResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *DtoPaymentAttemptResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *DtoPaymentAttemptResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoPaymentAttemptResponse) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoPaymentAttemptResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *DtoPaymentAttemptResponse) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *DtoPaymentAttemptResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DtoPaymentAttemptResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *DtoPaymentAttemptResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoPaymentAttemptResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *DtoPaymentAttemptResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *DtoPaymentAttemptResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

func (o DtoPaymentAttemptResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoPaymentAttemptResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttemptNumber) {
		toSerialize["attempt_number"] = o.AttemptNumber
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	return toSerialize, nil
}

type NullableDtoPaymentAttemptResponse struct {
	value *DtoPaymentAttemptResponse
	isSet bool
}

func (v NullableDtoPaymentAttemptResponse) Get() *DtoPaymentAttemptResponse {
	return v.value
}

func (v *NullableDtoPaymentAttemptResponse) Set(val *DtoPaymentAttemptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoPaymentAttemptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoPaymentAttemptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoPaymentAttemptResponse(val *DtoPaymentAttemptResponse) *NullableDtoPaymentAttemptResponse {
	return &NullableDtoPaymentAttemptResponse{value: val, isSet: true}
}

func (v NullableDtoPaymentAttemptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoPaymentAttemptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


