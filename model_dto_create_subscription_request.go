/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreateSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateSubscriptionRequest{}

// DtoCreateSubscriptionRequest struct for DtoCreateSubscriptionRequest
type DtoCreateSubscriptionRequest struct {
	BillingCadence TypesBillingCadence `json:"billing_cadence"`
	BillingPeriod TypesBillingPeriod `json:"billing_period"`
	BillingPeriodCount int32 `json:"billing_period_count"`
	Currency string `json:"currency"`
	CustomerId string `json:"customer_id"`
	EndDate *string `json:"end_date,omitempty"`
	LookupKey *string `json:"lookup_key,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	PlanId string `json:"plan_id"`
	StartDate string `json:"start_date"`
	TrialEnd *string `json:"trial_end,omitempty"`
	TrialStart *string `json:"trial_start,omitempty"`
}

type _DtoCreateSubscriptionRequest DtoCreateSubscriptionRequest

// NewDtoCreateSubscriptionRequest instantiates a new DtoCreateSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateSubscriptionRequest(billingCadence TypesBillingCadence, billingPeriod TypesBillingPeriod, billingPeriodCount int32, currency string, customerId string, planId string, startDate string) *DtoCreateSubscriptionRequest {
	this := DtoCreateSubscriptionRequest{}
	this.BillingCadence = billingCadence
	this.BillingPeriod = billingPeriod
	this.BillingPeriodCount = billingPeriodCount
	this.Currency = currency
	this.CustomerId = customerId
	this.PlanId = planId
	this.StartDate = startDate
	return &this
}

// NewDtoCreateSubscriptionRequestWithDefaults instantiates a new DtoCreateSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateSubscriptionRequestWithDefaults() *DtoCreateSubscriptionRequest {
	this := DtoCreateSubscriptionRequest{}
	return &this
}

// GetBillingCadence returns the BillingCadence field value
func (o *DtoCreateSubscriptionRequest) GetBillingCadence() TypesBillingCadence {
	if o == nil {
		var ret TypesBillingCadence
		return ret
	}

	return o.BillingCadence
}

// GetBillingCadenceOk returns a tuple with the BillingCadence field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetBillingCadenceOk() (*TypesBillingCadence, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCadence, true
}

// SetBillingCadence sets field value
func (o *DtoCreateSubscriptionRequest) SetBillingCadence(v TypesBillingCadence) {
	o.BillingCadence = v
}

// GetBillingPeriod returns the BillingPeriod field value
func (o *DtoCreateSubscriptionRequest) GetBillingPeriod() TypesBillingPeriod {
	if o == nil {
		var ret TypesBillingPeriod
		return ret
	}

	return o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetBillingPeriodOk() (*TypesBillingPeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingPeriod, true
}

// SetBillingPeriod sets field value
func (o *DtoCreateSubscriptionRequest) SetBillingPeriod(v TypesBillingPeriod) {
	o.BillingPeriod = v
}

// GetBillingPeriodCount returns the BillingPeriodCount field value
func (o *DtoCreateSubscriptionRequest) GetBillingPeriodCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BillingPeriodCount
}

// GetBillingPeriodCountOk returns a tuple with the BillingPeriodCount field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetBillingPeriodCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingPeriodCount, true
}

// SetBillingPeriodCount sets field value
func (o *DtoCreateSubscriptionRequest) SetBillingPeriodCount(v int32) {
	o.BillingPeriodCount = v
}

// GetCurrency returns the Currency field value
func (o *DtoCreateSubscriptionRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *DtoCreateSubscriptionRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetCustomerId returns the CustomerId field value
func (o *DtoCreateSubscriptionRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *DtoCreateSubscriptionRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DtoCreateSubscriptionRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DtoCreateSubscriptionRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DtoCreateSubscriptionRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetLookupKey returns the LookupKey field value if set, zero value otherwise.
func (o *DtoCreateSubscriptionRequest) GetLookupKey() string {
	if o == nil || IsNil(o.LookupKey) {
		var ret string
		return ret
	}
	return *o.LookupKey
}

// GetLookupKeyOk returns a tuple with the LookupKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetLookupKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LookupKey) {
		return nil, false
	}
	return o.LookupKey, true
}

// HasLookupKey returns a boolean if a field has been set.
func (o *DtoCreateSubscriptionRequest) HasLookupKey() bool {
	if o != nil && !IsNil(o.LookupKey) {
		return true
	}

	return false
}

// SetLookupKey gets a reference to the given string and assigns it to the LookupKey field.
func (o *DtoCreateSubscriptionRequest) SetLookupKey(v string) {
	o.LookupKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreateSubscriptionRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreateSubscriptionRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreateSubscriptionRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPlanId returns the PlanId field value
func (o *DtoCreateSubscriptionRequest) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *DtoCreateSubscriptionRequest) SetPlanId(v string) {
	o.PlanId = v
}

// GetStartDate returns the StartDate field value
func (o *DtoCreateSubscriptionRequest) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *DtoCreateSubscriptionRequest) SetStartDate(v string) {
	o.StartDate = v
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise.
func (o *DtoCreateSubscriptionRequest) GetTrialEnd() string {
	if o == nil || IsNil(o.TrialEnd) {
		var ret string
		return ret
	}
	return *o.TrialEnd
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetTrialEndOk() (*string, bool) {
	if o == nil || IsNil(o.TrialEnd) {
		return nil, false
	}
	return o.TrialEnd, true
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *DtoCreateSubscriptionRequest) HasTrialEnd() bool {
	if o != nil && !IsNil(o.TrialEnd) {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given string and assigns it to the TrialEnd field.
func (o *DtoCreateSubscriptionRequest) SetTrialEnd(v string) {
	o.TrialEnd = &v
}

// GetTrialStart returns the TrialStart field value if set, zero value otherwise.
func (o *DtoCreateSubscriptionRequest) GetTrialStart() string {
	if o == nil || IsNil(o.TrialStart) {
		var ret string
		return ret
	}
	return *o.TrialStart
}

// GetTrialStartOk returns a tuple with the TrialStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateSubscriptionRequest) GetTrialStartOk() (*string, bool) {
	if o == nil || IsNil(o.TrialStart) {
		return nil, false
	}
	return o.TrialStart, true
}

// HasTrialStart returns a boolean if a field has been set.
func (o *DtoCreateSubscriptionRequest) HasTrialStart() bool {
	if o != nil && !IsNil(o.TrialStart) {
		return true
	}

	return false
}

// SetTrialStart gets a reference to the given string and assigns it to the TrialStart field.
func (o *DtoCreateSubscriptionRequest) SetTrialStart(v string) {
	o.TrialStart = &v
}

func (o DtoCreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billing_cadence"] = o.BillingCadence
	toSerialize["billing_period"] = o.BillingPeriod
	toSerialize["billing_period_count"] = o.BillingPeriodCount
	toSerialize["currency"] = o.Currency
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.LookupKey) {
		toSerialize["lookup_key"] = o.LookupKey
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["plan_id"] = o.PlanId
	toSerialize["start_date"] = o.StartDate
	if !IsNil(o.TrialEnd) {
		toSerialize["trial_end"] = o.TrialEnd
	}
	if !IsNil(o.TrialStart) {
		toSerialize["trial_start"] = o.TrialStart
	}
	return toSerialize, nil
}

func (o *DtoCreateSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billing_cadence",
		"billing_period",
		"billing_period_count",
		"currency",
		"customer_id",
		"plan_id",
		"start_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateSubscriptionRequest := _DtoCreateSubscriptionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateSubscriptionRequest(varDtoCreateSubscriptionRequest)

	return err
}

type NullableDtoCreateSubscriptionRequest struct {
	value *DtoCreateSubscriptionRequest
	isSet bool
}

func (v NullableDtoCreateSubscriptionRequest) Get() *DtoCreateSubscriptionRequest {
	return v.value
}

func (v *NullableDtoCreateSubscriptionRequest) Set(val *DtoCreateSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateSubscriptionRequest(val *DtoCreateSubscriptionRequest) *NullableDtoCreateSubscriptionRequest {
	return &NullableDtoCreateSubscriptionRequest{value: val, isSet: true}
}

func (v NullableDtoCreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


