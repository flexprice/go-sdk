/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoBillingPeriodInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoBillingPeriodInfo{}

// DtoBillingPeriodInfo struct for DtoBillingPeriodInfo
type DtoBillingPeriodInfo struct {
	EndTime *string `json:"end_time,omitempty"`
	// e.g., \"monthly\", \"yearly\"
	Period *string `json:"period,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
}

// NewDtoBillingPeriodInfo instantiates a new DtoBillingPeriodInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoBillingPeriodInfo() *DtoBillingPeriodInfo {
	this := DtoBillingPeriodInfo{}
	return &this
}

// NewDtoBillingPeriodInfoWithDefaults instantiates a new DtoBillingPeriodInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoBillingPeriodInfoWithDefaults() *DtoBillingPeriodInfo {
	this := DtoBillingPeriodInfo{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DtoBillingPeriodInfo) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBillingPeriodInfo) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DtoBillingPeriodInfo) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *DtoBillingPeriodInfo) SetEndTime(v string) {
	o.EndTime = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *DtoBillingPeriodInfo) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBillingPeriodInfo) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *DtoBillingPeriodInfo) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *DtoBillingPeriodInfo) SetPeriod(v string) {
	o.Period = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DtoBillingPeriodInfo) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBillingPeriodInfo) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DtoBillingPeriodInfo) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *DtoBillingPeriodInfo) SetStartTime(v string) {
	o.StartTime = &v
}

func (o DtoBillingPeriodInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoBillingPeriodInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	return toSerialize, nil
}

type NullableDtoBillingPeriodInfo struct {
	value *DtoBillingPeriodInfo
	isSet bool
}

func (v NullableDtoBillingPeriodInfo) Get() *DtoBillingPeriodInfo {
	return v.value
}

func (v *NullableDtoBillingPeriodInfo) Set(val *DtoBillingPeriodInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoBillingPeriodInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoBillingPeriodInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoBillingPeriodInfo(val *DtoBillingPeriodInfo) *NullableDtoBillingPeriodInfo {
	return &NullableDtoBillingPeriodInfo{value: val, isSet: true}
}

func (v NullableDtoBillingPeriodInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoBillingPeriodInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


