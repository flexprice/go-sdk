/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoGetUsageAnalyticsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoGetUsageAnalyticsRequest{}

// DtoGetUsageAnalyticsRequest struct for DtoGetUsageAnalyticsRequest
type DtoGetUsageAnalyticsRequest struct {
	EndTime *string `json:"end_time,omitempty"`
	ExternalCustomerId string `json:"external_customer_id"`
	FeatureIds []string `json:"feature_ids,omitempty"`
	// allowed values: \"source\", \"feature_id\"
	GroupBy []string `json:"group_by,omitempty"`
	Sources []string `json:"sources,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
	WindowSize *TypesWindowSize `json:"window_size,omitempty"`
}

type _DtoGetUsageAnalyticsRequest DtoGetUsageAnalyticsRequest

// NewDtoGetUsageAnalyticsRequest instantiates a new DtoGetUsageAnalyticsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoGetUsageAnalyticsRequest(externalCustomerId string) *DtoGetUsageAnalyticsRequest {
	this := DtoGetUsageAnalyticsRequest{}
	this.ExternalCustomerId = externalCustomerId
	return &this
}

// NewDtoGetUsageAnalyticsRequestWithDefaults instantiates a new DtoGetUsageAnalyticsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoGetUsageAnalyticsRequestWithDefaults() *DtoGetUsageAnalyticsRequest {
	this := DtoGetUsageAnalyticsRequest{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *DtoGetUsageAnalyticsRequest) SetEndTime(v string) {
	o.EndTime = &v
}

// GetExternalCustomerId returns the ExternalCustomerId field value
func (o *DtoGetUsageAnalyticsRequest) GetExternalCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalCustomerId
}

// GetExternalCustomerIdOk returns a tuple with the ExternalCustomerId field value
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetExternalCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalCustomerId, true
}

// SetExternalCustomerId sets field value
func (o *DtoGetUsageAnalyticsRequest) SetExternalCustomerId(v string) {
	o.ExternalCustomerId = v
}

// GetFeatureIds returns the FeatureIds field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetFeatureIds() []string {
	if o == nil || IsNil(o.FeatureIds) {
		var ret []string
		return ret
	}
	return o.FeatureIds
}

// GetFeatureIdsOk returns a tuple with the FeatureIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetFeatureIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FeatureIds) {
		return nil, false
	}
	return o.FeatureIds, true
}

// HasFeatureIds returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasFeatureIds() bool {
	if o != nil && !IsNil(o.FeatureIds) {
		return true
	}

	return false
}

// SetFeatureIds gets a reference to the given []string and assigns it to the FeatureIds field.
func (o *DtoGetUsageAnalyticsRequest) SetFeatureIds(v []string) {
	o.FeatureIds = v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetGroupBy() []string {
	if o == nil || IsNil(o.GroupBy) {
		var ret []string
		return ret
	}
	return o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetGroupByOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupBy) {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasGroupBy() bool {
	if o != nil && !IsNil(o.GroupBy) {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given []string and assigns it to the GroupBy field.
func (o *DtoGetUsageAnalyticsRequest) SetGroupBy(v []string) {
	o.GroupBy = v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetSources() []string {
	if o == nil || IsNil(o.Sources) {
		var ret []string
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetSourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []string and assigns it to the Sources field.
func (o *DtoGetUsageAnalyticsRequest) SetSources(v []string) {
	o.Sources = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *DtoGetUsageAnalyticsRequest) SetStartTime(v string) {
	o.StartTime = &v
}

// GetWindowSize returns the WindowSize field value if set, zero value otherwise.
func (o *DtoGetUsageAnalyticsRequest) GetWindowSize() TypesWindowSize {
	if o == nil || IsNil(o.WindowSize) {
		var ret TypesWindowSize
		return ret
	}
	return *o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageAnalyticsRequest) GetWindowSizeOk() (*TypesWindowSize, bool) {
	if o == nil || IsNil(o.WindowSize) {
		return nil, false
	}
	return o.WindowSize, true
}

// HasWindowSize returns a boolean if a field has been set.
func (o *DtoGetUsageAnalyticsRequest) HasWindowSize() bool {
	if o != nil && !IsNil(o.WindowSize) {
		return true
	}

	return false
}

// SetWindowSize gets a reference to the given TypesWindowSize and assigns it to the WindowSize field.
func (o *DtoGetUsageAnalyticsRequest) SetWindowSize(v TypesWindowSize) {
	o.WindowSize = &v
}

func (o DtoGetUsageAnalyticsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoGetUsageAnalyticsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	toSerialize["external_customer_id"] = o.ExternalCustomerId
	if !IsNil(o.FeatureIds) {
		toSerialize["feature_ids"] = o.FeatureIds
	}
	if !IsNil(o.GroupBy) {
		toSerialize["group_by"] = o.GroupBy
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.WindowSize) {
		toSerialize["window_size"] = o.WindowSize
	}
	return toSerialize, nil
}

func (o *DtoGetUsageAnalyticsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_customer_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoGetUsageAnalyticsRequest := _DtoGetUsageAnalyticsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoGetUsageAnalyticsRequest)

	if err != nil {
		return err
	}

	*o = DtoGetUsageAnalyticsRequest(varDtoGetUsageAnalyticsRequest)

	return err
}

type NullableDtoGetUsageAnalyticsRequest struct {
	value *DtoGetUsageAnalyticsRequest
	isSet bool
}

func (v NullableDtoGetUsageAnalyticsRequest) Get() *DtoGetUsageAnalyticsRequest {
	return v.value
}

func (v *NullableDtoGetUsageAnalyticsRequest) Set(val *DtoGetUsageAnalyticsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoGetUsageAnalyticsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoGetUsageAnalyticsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoGetUsageAnalyticsRequest(val *DtoGetUsageAnalyticsRequest) *NullableDtoGetUsageAnalyticsRequest {
	return &NullableDtoGetUsageAnalyticsRequest{value: val, isSet: true}
}

func (v NullableDtoGetUsageAnalyticsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoGetUsageAnalyticsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


