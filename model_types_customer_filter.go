/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
)

// checks if the TypesCustomerFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypesCustomerFilter{}

// TypesCustomerFilter struct for TypesCustomerFilter
type TypesCustomerFilter struct {
	CustomerIds []string `json:"customer_ids,omitempty"`
	Email *string `json:"email,omitempty"`
	EndTime *string `json:"end_time,omitempty"`
	Expand *string `json:"expand,omitempty"`
	ExternalId *string `json:"external_id,omitempty"`
	// filters allows complex filtering based on multiple fields
	Filters []TypesFilterCondition `json:"filters,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	Order *string `json:"order,omitempty"`
	Sort []TypesSortCondition `json:"sort,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
	Status *TypesStatus `json:"status,omitempty"`
}

// NewTypesCustomerFilter instantiates a new TypesCustomerFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesCustomerFilter() *TypesCustomerFilter {
	this := TypesCustomerFilter{}
	return &this
}

// NewTypesCustomerFilterWithDefaults instantiates a new TypesCustomerFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesCustomerFilterWithDefaults() *TypesCustomerFilter {
	this := TypesCustomerFilter{}
	return &this
}

// GetCustomerIds returns the CustomerIds field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetCustomerIds() []string {
	if o == nil || IsNil(o.CustomerIds) {
		var ret []string
		return ret
	}
	return o.CustomerIds
}

// GetCustomerIdsOk returns a tuple with the CustomerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetCustomerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomerIds) {
		return nil, false
	}
	return o.CustomerIds, true
}

// HasCustomerIds returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasCustomerIds() bool {
	if o != nil && !IsNil(o.CustomerIds) {
		return true
	}

	return false
}

// SetCustomerIds gets a reference to the given []string and assigns it to the CustomerIds field.
func (o *TypesCustomerFilter) SetCustomerIds(v []string) {
	o.CustomerIds = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TypesCustomerFilter) SetEmail(v string) {
	o.Email = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *TypesCustomerFilter) SetEndTime(v string) {
	o.EndTime = &v
}

// GetExpand returns the Expand field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetExpand() string {
	if o == nil || IsNil(o.Expand) {
		var ret string
		return ret
	}
	return *o.Expand
}

// GetExpandOk returns a tuple with the Expand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetExpandOk() (*string, bool) {
	if o == nil || IsNil(o.Expand) {
		return nil, false
	}
	return o.Expand, true
}

// HasExpand returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasExpand() bool {
	if o != nil && !IsNil(o.Expand) {
		return true
	}

	return false
}

// SetExpand gets a reference to the given string and assigns it to the Expand field.
func (o *TypesCustomerFilter) SetExpand(v string) {
	o.Expand = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *TypesCustomerFilter) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetFilters() []TypesFilterCondition {
	if o == nil || IsNil(o.Filters) {
		var ret []TypesFilterCondition
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetFiltersOk() ([]TypesFilterCondition, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []TypesFilterCondition and assigns it to the Filters field.
func (o *TypesCustomerFilter) SetFilters(v []TypesFilterCondition) {
	o.Filters = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *TypesCustomerFilter) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *TypesCustomerFilter) SetOffset(v int32) {
	o.Offset = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetOrder() string {
	if o == nil || IsNil(o.Order) {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetOrderOk() (*string, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *TypesCustomerFilter) SetOrder(v string) {
	o.Order = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetSort() []TypesSortCondition {
	if o == nil || IsNil(o.Sort) {
		var ret []TypesSortCondition
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetSortOk() ([]TypesSortCondition, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []TypesSortCondition and assigns it to the Sort field.
func (o *TypesCustomerFilter) SetSort(v []TypesSortCondition) {
	o.Sort = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *TypesCustomerFilter) SetStartTime(v string) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TypesCustomerFilter) GetStatus() TypesStatus {
	if o == nil || IsNil(o.Status) {
		var ret TypesStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesCustomerFilter) GetStatusOk() (*TypesStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TypesCustomerFilter) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given TypesStatus and assigns it to the Status field.
func (o *TypesCustomerFilter) SetStatus(v TypesStatus) {
	o.Status = &v
}

func (o TypesCustomerFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypesCustomerFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerIds) {
		toSerialize["customer_ids"] = o.CustomerIds
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.Expand) {
		toSerialize["expand"] = o.Expand
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableTypesCustomerFilter struct {
	value *TypesCustomerFilter
	isSet bool
}

func (v NullableTypesCustomerFilter) Get() *TypesCustomerFilter {
	return v.value
}

func (v *NullableTypesCustomerFilter) Set(val *TypesCustomerFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesCustomerFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesCustomerFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesCustomerFilter(val *TypesCustomerFilter) *NullableTypesCustomerFilter {
	return &NullableTypesCustomerFilter{value: val, isSet: true}
}

func (v NullableTypesCustomerFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesCustomerFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


