/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoListWalletTransactionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoListWalletTransactionsResponse{}

// DtoListWalletTransactionsResponse struct for DtoListWalletTransactionsResponse
type DtoListWalletTransactionsResponse struct {
	Items []DtoWalletTransactionResponse `json:"items,omitempty"`
	Pagination *TypesPaginationResponse `json:"pagination,omitempty"`
}

// NewDtoListWalletTransactionsResponse instantiates a new DtoListWalletTransactionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoListWalletTransactionsResponse() *DtoListWalletTransactionsResponse {
	this := DtoListWalletTransactionsResponse{}
	return &this
}

// NewDtoListWalletTransactionsResponseWithDefaults instantiates a new DtoListWalletTransactionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoListWalletTransactionsResponseWithDefaults() *DtoListWalletTransactionsResponse {
	this := DtoListWalletTransactionsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DtoListWalletTransactionsResponse) GetItems() []DtoWalletTransactionResponse {
	if o == nil || IsNil(o.Items) {
		var ret []DtoWalletTransactionResponse
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoListWalletTransactionsResponse) GetItemsOk() ([]DtoWalletTransactionResponse, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *DtoListWalletTransactionsResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []DtoWalletTransactionResponse and assigns it to the Items field.
func (o *DtoListWalletTransactionsResponse) SetItems(v []DtoWalletTransactionResponse) {
	o.Items = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *DtoListWalletTransactionsResponse) GetPagination() TypesPaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret TypesPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoListWalletTransactionsResponse) GetPaginationOk() (*TypesPaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *DtoListWalletTransactionsResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given TypesPaginationResponse and assigns it to the Pagination field.
func (o *DtoListWalletTransactionsResponse) SetPagination(v TypesPaginationResponse) {
	o.Pagination = &v
}

func (o DtoListWalletTransactionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoListWalletTransactionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableDtoListWalletTransactionsResponse struct {
	value *DtoListWalletTransactionsResponse
	isSet bool
}

func (v NullableDtoListWalletTransactionsResponse) Get() *DtoListWalletTransactionsResponse {
	return v.value
}

func (v *NullableDtoListWalletTransactionsResponse) Set(val *DtoListWalletTransactionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoListWalletTransactionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoListWalletTransactionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoListWalletTransactionsResponse(val *DtoListWalletTransactionsResponse) *NullableDtoListWalletTransactionsResponse {
	return &NullableDtoListWalletTransactionsResponse{value: val, isSet: true}
}

func (v NullableDtoListWalletTransactionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoListWalletTransactionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


