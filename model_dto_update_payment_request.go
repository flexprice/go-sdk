/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoUpdatePaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoUpdatePaymentRequest{}

// DtoUpdatePaymentRequest struct for DtoUpdatePaymentRequest
type DtoUpdatePaymentRequest struct {
	Metadata *map[string]string `json:"metadata,omitempty"`
	PaymentStatus *string `json:"payment_status,omitempty"`
}

// NewDtoUpdatePaymentRequest instantiates a new DtoUpdatePaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoUpdatePaymentRequest() *DtoUpdatePaymentRequest {
	this := DtoUpdatePaymentRequest{}
	return &this
}

// NewDtoUpdatePaymentRequestWithDefaults instantiates a new DtoUpdatePaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoUpdatePaymentRequestWithDefaults() *DtoUpdatePaymentRequest {
	this := DtoUpdatePaymentRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoUpdatePaymentRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePaymentRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoUpdatePaymentRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoUpdatePaymentRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *DtoUpdatePaymentRequest) GetPaymentStatus() string {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePaymentRequest) GetPaymentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *DtoUpdatePaymentRequest) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *DtoUpdatePaymentRequest) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

func (o DtoUpdatePaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoUpdatePaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	return toSerialize, nil
}

type NullableDtoUpdatePaymentRequest struct {
	value *DtoUpdatePaymentRequest
	isSet bool
}

func (v NullableDtoUpdatePaymentRequest) Get() *DtoUpdatePaymentRequest {
	return v.value
}

func (v *NullableDtoUpdatePaymentRequest) Set(val *DtoUpdatePaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoUpdatePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoUpdatePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoUpdatePaymentRequest(val *DtoUpdatePaymentRequest) *NullableDtoUpdatePaymentRequest {
	return &NullableDtoUpdatePaymentRequest{value: val, isSet: true}
}

func (v NullableDtoUpdatePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoUpdatePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


