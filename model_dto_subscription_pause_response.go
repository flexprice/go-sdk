/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoSubscriptionPauseResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoSubscriptionPauseResponse{}

// DtoSubscriptionPauseResponse struct for DtoSubscriptionPauseResponse
type DtoSubscriptionPauseResponse struct {
	CreatedAt *string `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	// EnvironmentID is the environment identifier for the pause
	EnvironmentId *string `json:"environment_id,omitempty"`
	// ID is the unique identifier for the subscription pause
	Id *string `json:"id,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	// OriginalPeriodEnd is the end of the billing period when the pause was created
	OriginalPeriodEnd *string `json:"original_period_end,omitempty"`
	// OriginalPeriodStart is the start of the billing period when the pause was created
	OriginalPeriodStart *string `json:"original_period_start,omitempty"`
	// PauseEnd is when the pause will end (null for indefinite)
	PauseEnd *string `json:"pause_end,omitempty"`
	PauseMode *TypesPauseMode `json:"pause_mode,omitempty"`
	// PauseStart is when the pause actually started
	PauseStart *string `json:"pause_start,omitempty"`
	PauseStatus *TypesPauseStatus `json:"pause_status,omitempty"`
	// Reason is the reason for pausing
	Reason *string `json:"reason,omitempty"`
	ResumeMode *TypesResumeMode `json:"resume_mode,omitempty"`
	// ResumedAt is when the pause was actually ended (if manually resumed)
	ResumedAt *string `json:"resumed_at,omitempty"`
	Status *TypesStatus `json:"status,omitempty"`
	// SubscriptionID is the identifier for the subscription
	SubscriptionId *string `json:"subscription_id,omitempty"`
	TenantId *string `json:"tenant_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
}

// NewDtoSubscriptionPauseResponse instantiates a new DtoSubscriptionPauseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoSubscriptionPauseResponse() *DtoSubscriptionPauseResponse {
	this := DtoSubscriptionPauseResponse{}
	return &this
}

// NewDtoSubscriptionPauseResponseWithDefaults instantiates a new DtoSubscriptionPauseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoSubscriptionPauseResponseWithDefaults() *DtoSubscriptionPauseResponse {
	this := DtoSubscriptionPauseResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DtoSubscriptionPauseResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *DtoSubscriptionPauseResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *DtoSubscriptionPauseResponse) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoSubscriptionPauseResponse) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoSubscriptionPauseResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetOriginalPeriodEnd returns the OriginalPeriodEnd field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetOriginalPeriodEnd() string {
	if o == nil || IsNil(o.OriginalPeriodEnd) {
		var ret string
		return ret
	}
	return *o.OriginalPeriodEnd
}

// GetOriginalPeriodEndOk returns a tuple with the OriginalPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetOriginalPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalPeriodEnd) {
		return nil, false
	}
	return o.OriginalPeriodEnd, true
}

// HasOriginalPeriodEnd returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasOriginalPeriodEnd() bool {
	if o != nil && !IsNil(o.OriginalPeriodEnd) {
		return true
	}

	return false
}

// SetOriginalPeriodEnd gets a reference to the given string and assigns it to the OriginalPeriodEnd field.
func (o *DtoSubscriptionPauseResponse) SetOriginalPeriodEnd(v string) {
	o.OriginalPeriodEnd = &v
}

// GetOriginalPeriodStart returns the OriginalPeriodStart field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetOriginalPeriodStart() string {
	if o == nil || IsNil(o.OriginalPeriodStart) {
		var ret string
		return ret
	}
	return *o.OriginalPeriodStart
}

// GetOriginalPeriodStartOk returns a tuple with the OriginalPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetOriginalPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalPeriodStart) {
		return nil, false
	}
	return o.OriginalPeriodStart, true
}

// HasOriginalPeriodStart returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasOriginalPeriodStart() bool {
	if o != nil && !IsNil(o.OriginalPeriodStart) {
		return true
	}

	return false
}

// SetOriginalPeriodStart gets a reference to the given string and assigns it to the OriginalPeriodStart field.
func (o *DtoSubscriptionPauseResponse) SetOriginalPeriodStart(v string) {
	o.OriginalPeriodStart = &v
}

// GetPauseEnd returns the PauseEnd field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetPauseEnd() string {
	if o == nil || IsNil(o.PauseEnd) {
		var ret string
		return ret
	}
	return *o.PauseEnd
}

// GetPauseEndOk returns a tuple with the PauseEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetPauseEndOk() (*string, bool) {
	if o == nil || IsNil(o.PauseEnd) {
		return nil, false
	}
	return o.PauseEnd, true
}

// HasPauseEnd returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasPauseEnd() bool {
	if o != nil && !IsNil(o.PauseEnd) {
		return true
	}

	return false
}

// SetPauseEnd gets a reference to the given string and assigns it to the PauseEnd field.
func (o *DtoSubscriptionPauseResponse) SetPauseEnd(v string) {
	o.PauseEnd = &v
}

// GetPauseMode returns the PauseMode field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetPauseMode() TypesPauseMode {
	if o == nil || IsNil(o.PauseMode) {
		var ret TypesPauseMode
		return ret
	}
	return *o.PauseMode
}

// GetPauseModeOk returns a tuple with the PauseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetPauseModeOk() (*TypesPauseMode, bool) {
	if o == nil || IsNil(o.PauseMode) {
		return nil, false
	}
	return o.PauseMode, true
}

// HasPauseMode returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasPauseMode() bool {
	if o != nil && !IsNil(o.PauseMode) {
		return true
	}

	return false
}

// SetPauseMode gets a reference to the given TypesPauseMode and assigns it to the PauseMode field.
func (o *DtoSubscriptionPauseResponse) SetPauseMode(v TypesPauseMode) {
	o.PauseMode = &v
}

// GetPauseStart returns the PauseStart field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetPauseStart() string {
	if o == nil || IsNil(o.PauseStart) {
		var ret string
		return ret
	}
	return *o.PauseStart
}

// GetPauseStartOk returns a tuple with the PauseStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetPauseStartOk() (*string, bool) {
	if o == nil || IsNil(o.PauseStart) {
		return nil, false
	}
	return o.PauseStart, true
}

// HasPauseStart returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasPauseStart() bool {
	if o != nil && !IsNil(o.PauseStart) {
		return true
	}

	return false
}

// SetPauseStart gets a reference to the given string and assigns it to the PauseStart field.
func (o *DtoSubscriptionPauseResponse) SetPauseStart(v string) {
	o.PauseStart = &v
}

// GetPauseStatus returns the PauseStatus field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetPauseStatus() TypesPauseStatus {
	if o == nil || IsNil(o.PauseStatus) {
		var ret TypesPauseStatus
		return ret
	}
	return *o.PauseStatus
}

// GetPauseStatusOk returns a tuple with the PauseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetPauseStatusOk() (*TypesPauseStatus, bool) {
	if o == nil || IsNil(o.PauseStatus) {
		return nil, false
	}
	return o.PauseStatus, true
}

// HasPauseStatus returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasPauseStatus() bool {
	if o != nil && !IsNil(o.PauseStatus) {
		return true
	}

	return false
}

// SetPauseStatus gets a reference to the given TypesPauseStatus and assigns it to the PauseStatus field.
func (o *DtoSubscriptionPauseResponse) SetPauseStatus(v TypesPauseStatus) {
	o.PauseStatus = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *DtoSubscriptionPauseResponse) SetReason(v string) {
	o.Reason = &v
}

// GetResumeMode returns the ResumeMode field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetResumeMode() TypesResumeMode {
	if o == nil || IsNil(o.ResumeMode) {
		var ret TypesResumeMode
		return ret
	}
	return *o.ResumeMode
}

// GetResumeModeOk returns a tuple with the ResumeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetResumeModeOk() (*TypesResumeMode, bool) {
	if o == nil || IsNil(o.ResumeMode) {
		return nil, false
	}
	return o.ResumeMode, true
}

// HasResumeMode returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasResumeMode() bool {
	if o != nil && !IsNil(o.ResumeMode) {
		return true
	}

	return false
}

// SetResumeMode gets a reference to the given TypesResumeMode and assigns it to the ResumeMode field.
func (o *DtoSubscriptionPauseResponse) SetResumeMode(v TypesResumeMode) {
	o.ResumeMode = &v
}

// GetResumedAt returns the ResumedAt field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetResumedAt() string {
	if o == nil || IsNil(o.ResumedAt) {
		var ret string
		return ret
	}
	return *o.ResumedAt
}

// GetResumedAtOk returns a tuple with the ResumedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetResumedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ResumedAt) {
		return nil, false
	}
	return o.ResumedAt, true
}

// HasResumedAt returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasResumedAt() bool {
	if o != nil && !IsNil(o.ResumedAt) {
		return true
	}

	return false
}

// SetResumedAt gets a reference to the given string and assigns it to the ResumedAt field.
func (o *DtoSubscriptionPauseResponse) SetResumedAt(v string) {
	o.ResumedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetStatus() TypesStatus {
	if o == nil || IsNil(o.Status) {
		var ret TypesStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetStatusOk() (*TypesStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given TypesStatus and assigns it to the Status field.
func (o *DtoSubscriptionPauseResponse) SetStatus(v TypesStatus) {
	o.Status = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DtoSubscriptionPauseResponse) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *DtoSubscriptionPauseResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DtoSubscriptionPauseResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *DtoSubscriptionPauseResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoSubscriptionPauseResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *DtoSubscriptionPauseResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *DtoSubscriptionPauseResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

func (o DtoSubscriptionPauseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoSubscriptionPauseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.OriginalPeriodEnd) {
		toSerialize["original_period_end"] = o.OriginalPeriodEnd
	}
	if !IsNil(o.OriginalPeriodStart) {
		toSerialize["original_period_start"] = o.OriginalPeriodStart
	}
	if !IsNil(o.PauseEnd) {
		toSerialize["pause_end"] = o.PauseEnd
	}
	if !IsNil(o.PauseMode) {
		toSerialize["pause_mode"] = o.PauseMode
	}
	if !IsNil(o.PauseStart) {
		toSerialize["pause_start"] = o.PauseStart
	}
	if !IsNil(o.PauseStatus) {
		toSerialize["pause_status"] = o.PauseStatus
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.ResumeMode) {
		toSerialize["resume_mode"] = o.ResumeMode
	}
	if !IsNil(o.ResumedAt) {
		toSerialize["resumed_at"] = o.ResumedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	return toSerialize, nil
}

type NullableDtoSubscriptionPauseResponse struct {
	value *DtoSubscriptionPauseResponse
	isSet bool
}

func (v NullableDtoSubscriptionPauseResponse) Get() *DtoSubscriptionPauseResponse {
	return v.value
}

func (v *NullableDtoSubscriptionPauseResponse) Set(val *DtoSubscriptionPauseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoSubscriptionPauseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoSubscriptionPauseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoSubscriptionPauseResponse(val *DtoSubscriptionPauseResponse) *NullableDtoSubscriptionPauseResponse {
	return &NullableDtoSubscriptionPauseResponse{value: val, isSet: true}
}

func (v NullableDtoSubscriptionPauseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoSubscriptionPauseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


