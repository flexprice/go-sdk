/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreateCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateCustomerRequest{}

// DtoCreateCustomerRequest struct for DtoCreateCustomerRequest
type DtoCreateCustomerRequest struct {
	AddressCity *string `json:"address_city,omitempty"`
	AddressCountry *string `json:"address_country,omitempty"`
	AddressLine1 *string `json:"address_line1,omitempty"`
	AddressLine2 *string `json:"address_line2,omitempty"`
	AddressPostalCode *string `json:"address_postal_code,omitempty"`
	AddressState *string `json:"address_state,omitempty"`
	Email *string `json:"email,omitempty"`
	ExternalId string `json:"external_id"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
}

type _DtoCreateCustomerRequest DtoCreateCustomerRequest

// NewDtoCreateCustomerRequest instantiates a new DtoCreateCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateCustomerRequest(externalId string) *DtoCreateCustomerRequest {
	this := DtoCreateCustomerRequest{}
	this.ExternalId = externalId
	return &this
}

// NewDtoCreateCustomerRequestWithDefaults instantiates a new DtoCreateCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateCustomerRequestWithDefaults() *DtoCreateCustomerRequest {
	this := DtoCreateCustomerRequest{}
	return &this
}

// GetAddressCity returns the AddressCity field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressCity() string {
	if o == nil || IsNil(o.AddressCity) {
		var ret string
		return ret
	}
	return *o.AddressCity
}

// GetAddressCityOk returns a tuple with the AddressCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressCityOk() (*string, bool) {
	if o == nil || IsNil(o.AddressCity) {
		return nil, false
	}
	return o.AddressCity, true
}

// HasAddressCity returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressCity() bool {
	if o != nil && !IsNil(o.AddressCity) {
		return true
	}

	return false
}

// SetAddressCity gets a reference to the given string and assigns it to the AddressCity field.
func (o *DtoCreateCustomerRequest) SetAddressCity(v string) {
	o.AddressCity = &v
}

// GetAddressCountry returns the AddressCountry field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressCountry() string {
	if o == nil || IsNil(o.AddressCountry) {
		var ret string
		return ret
	}
	return *o.AddressCountry
}

// GetAddressCountryOk returns a tuple with the AddressCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressCountryOk() (*string, bool) {
	if o == nil || IsNil(o.AddressCountry) {
		return nil, false
	}
	return o.AddressCountry, true
}

// HasAddressCountry returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressCountry() bool {
	if o != nil && !IsNil(o.AddressCountry) {
		return true
	}

	return false
}

// SetAddressCountry gets a reference to the given string and assigns it to the AddressCountry field.
func (o *DtoCreateCustomerRequest) SetAddressCountry(v string) {
	o.AddressCountry = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *DtoCreateCustomerRequest) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *DtoCreateCustomerRequest) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetAddressPostalCode returns the AddressPostalCode field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressPostalCode() string {
	if o == nil || IsNil(o.AddressPostalCode) {
		var ret string
		return ret
	}
	return *o.AddressPostalCode
}

// GetAddressPostalCodeOk returns a tuple with the AddressPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressPostalCode) {
		return nil, false
	}
	return o.AddressPostalCode, true
}

// HasAddressPostalCode returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressPostalCode() bool {
	if o != nil && !IsNil(o.AddressPostalCode) {
		return true
	}

	return false
}

// SetAddressPostalCode gets a reference to the given string and assigns it to the AddressPostalCode field.
func (o *DtoCreateCustomerRequest) SetAddressPostalCode(v string) {
	o.AddressPostalCode = &v
}

// GetAddressState returns the AddressState field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetAddressState() string {
	if o == nil || IsNil(o.AddressState) {
		var ret string
		return ret
	}
	return *o.AddressState
}

// GetAddressStateOk returns a tuple with the AddressState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetAddressStateOk() (*string, bool) {
	if o == nil || IsNil(o.AddressState) {
		return nil, false
	}
	return o.AddressState, true
}

// HasAddressState returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasAddressState() bool {
	if o != nil && !IsNil(o.AddressState) {
		return true
	}

	return false
}

// SetAddressState gets a reference to the given string and assigns it to the AddressState field.
func (o *DtoCreateCustomerRequest) SetAddressState(v string) {
	o.AddressState = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DtoCreateCustomerRequest) SetEmail(v string) {
	o.Email = &v
}

// GetExternalId returns the ExternalId field value
func (o *DtoCreateCustomerRequest) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *DtoCreateCustomerRequest) SetExternalId(v string) {
	o.ExternalId = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreateCustomerRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DtoCreateCustomerRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateCustomerRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DtoCreateCustomerRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DtoCreateCustomerRequest) SetName(v string) {
	o.Name = &v
}

func (o DtoCreateCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressCity) {
		toSerialize["address_city"] = o.AddressCity
	}
	if !IsNil(o.AddressCountry) {
		toSerialize["address_country"] = o.AddressCountry
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["address_line1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["address_line2"] = o.AddressLine2
	}
	if !IsNil(o.AddressPostalCode) {
		toSerialize["address_postal_code"] = o.AddressPostalCode
	}
	if !IsNil(o.AddressState) {
		toSerialize["address_state"] = o.AddressState
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["external_id"] = o.ExternalId
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

func (o *DtoCreateCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateCustomerRequest := _DtoCreateCustomerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateCustomerRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateCustomerRequest(varDtoCreateCustomerRequest)

	return err
}

type NullableDtoCreateCustomerRequest struct {
	value *DtoCreateCustomerRequest
	isSet bool
}

func (v NullableDtoCreateCustomerRequest) Get() *DtoCreateCustomerRequest {
	return v.value
}

func (v *NullableDtoCreateCustomerRequest) Set(val *DtoCreateCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateCustomerRequest(val *DtoCreateCustomerRequest) *NullableDtoCreateCustomerRequest {
	return &NullableDtoCreateCustomerRequest{value: val, isSet: true}
}

func (v NullableDtoCreateCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


