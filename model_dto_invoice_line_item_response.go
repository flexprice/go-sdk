/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoInvoiceLineItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoInvoiceLineItemResponse{}

// DtoInvoiceLineItemResponse struct for DtoInvoiceLineItemResponse
type DtoInvoiceLineItemResponse struct {
	Amount *float32 `json:"amount,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	Currency *string `json:"currency,omitempty"`
	CustomerId *string `json:"customer_id,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Id *string `json:"id,omitempty"`
	InvoiceId *string `json:"invoice_id,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	MeterDisplayName *string `json:"meter_display_name,omitempty"`
	MeterId *string `json:"meter_id,omitempty"`
	PeriodEnd *string `json:"period_end,omitempty"`
	PeriodStart *string `json:"period_start,omitempty"`
	PlanDisplayName *string `json:"plan_display_name,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
	PriceId *string `json:"price_id,omitempty"`
	PriceType *string `json:"price_type,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
	Status *string `json:"status,omitempty"`
	SubscriptionId *string `json:"subscription_id,omitempty"`
	TenantId *string `json:"tenant_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
}

// NewDtoInvoiceLineItemResponse instantiates a new DtoInvoiceLineItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoInvoiceLineItemResponse() *DtoInvoiceLineItemResponse {
	this := DtoInvoiceLineItemResponse{}
	return &this
}

// NewDtoInvoiceLineItemResponseWithDefaults instantiates a new DtoInvoiceLineItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoInvoiceLineItemResponseWithDefaults() *DtoInvoiceLineItemResponse {
	this := DtoInvoiceLineItemResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DtoInvoiceLineItemResponse) SetAmount(v float32) {
	o.Amount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DtoInvoiceLineItemResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *DtoInvoiceLineItemResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *DtoInvoiceLineItemResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DtoInvoiceLineItemResponse) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DtoInvoiceLineItemResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoInvoiceLineItemResponse) SetId(v string) {
	o.Id = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *DtoInvoiceLineItemResponse) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoInvoiceLineItemResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMeterDisplayName returns the MeterDisplayName field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetMeterDisplayName() string {
	if o == nil || IsNil(o.MeterDisplayName) {
		var ret string
		return ret
	}
	return *o.MeterDisplayName
}

// GetMeterDisplayNameOk returns a tuple with the MeterDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetMeterDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.MeterDisplayName) {
		return nil, false
	}
	return o.MeterDisplayName, true
}

// HasMeterDisplayName returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasMeterDisplayName() bool {
	if o != nil && !IsNil(o.MeterDisplayName) {
		return true
	}

	return false
}

// SetMeterDisplayName gets a reference to the given string and assigns it to the MeterDisplayName field.
func (o *DtoInvoiceLineItemResponse) SetMeterDisplayName(v string) {
	o.MeterDisplayName = &v
}

// GetMeterId returns the MeterId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetMeterId() string {
	if o == nil || IsNil(o.MeterId) {
		var ret string
		return ret
	}
	return *o.MeterId
}

// GetMeterIdOk returns a tuple with the MeterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetMeterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MeterId) {
		return nil, false
	}
	return o.MeterId, true
}

// HasMeterId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasMeterId() bool {
	if o != nil && !IsNil(o.MeterId) {
		return true
	}

	return false
}

// SetMeterId gets a reference to the given string and assigns it to the MeterId field.
func (o *DtoInvoiceLineItemResponse) SetMeterId(v string) {
	o.MeterId = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPeriodEnd() string {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret string
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given string and assigns it to the PeriodEnd field.
func (o *DtoInvoiceLineItemResponse) SetPeriodEnd(v string) {
	o.PeriodEnd = &v
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPeriodStart() string {
	if o == nil || IsNil(o.PeriodStart) {
		var ret string
		return ret
	}
	return *o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodStart) {
		return nil, false
	}
	return o.PeriodStart, true
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPeriodStart() bool {
	if o != nil && !IsNil(o.PeriodStart) {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given string and assigns it to the PeriodStart field.
func (o *DtoInvoiceLineItemResponse) SetPeriodStart(v string) {
	o.PeriodStart = &v
}

// GetPlanDisplayName returns the PlanDisplayName field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPlanDisplayName() string {
	if o == nil || IsNil(o.PlanDisplayName) {
		var ret string
		return ret
	}
	return *o.PlanDisplayName
}

// GetPlanDisplayNameOk returns a tuple with the PlanDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPlanDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanDisplayName) {
		return nil, false
	}
	return o.PlanDisplayName, true
}

// HasPlanDisplayName returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPlanDisplayName() bool {
	if o != nil && !IsNil(o.PlanDisplayName) {
		return true
	}

	return false
}

// SetPlanDisplayName gets a reference to the given string and assigns it to the PlanDisplayName field.
func (o *DtoInvoiceLineItemResponse) SetPlanDisplayName(v string) {
	o.PlanDisplayName = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *DtoInvoiceLineItemResponse) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPriceId returns the PriceId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPriceId() string {
	if o == nil || IsNil(o.PriceId) {
		var ret string
		return ret
	}
	return *o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PriceId) {
		return nil, false
	}
	return o.PriceId, true
}

// HasPriceId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPriceId() bool {
	if o != nil && !IsNil(o.PriceId) {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given string and assigns it to the PriceId field.
func (o *DtoInvoiceLineItemResponse) SetPriceId(v string) {
	o.PriceId = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *DtoInvoiceLineItemResponse) SetPriceType(v string) {
	o.PriceType = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *DtoInvoiceLineItemResponse) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DtoInvoiceLineItemResponse) SetStatus(v string) {
	o.Status = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DtoInvoiceLineItemResponse) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *DtoInvoiceLineItemResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DtoInvoiceLineItemResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *DtoInvoiceLineItemResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvoiceLineItemResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *DtoInvoiceLineItemResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *DtoInvoiceLineItemResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

func (o DtoInvoiceLineItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoInvoiceLineItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoice_id"] = o.InvoiceId
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MeterDisplayName) {
		toSerialize["meter_display_name"] = o.MeterDisplayName
	}
	if !IsNil(o.MeterId) {
		toSerialize["meter_id"] = o.MeterId
	}
	if !IsNil(o.PeriodEnd) {
		toSerialize["period_end"] = o.PeriodEnd
	}
	if !IsNil(o.PeriodStart) {
		toSerialize["period_start"] = o.PeriodStart
	}
	if !IsNil(o.PlanDisplayName) {
		toSerialize["plan_display_name"] = o.PlanDisplayName
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.PriceId) {
		toSerialize["price_id"] = o.PriceId
	}
	if !IsNil(o.PriceType) {
		toSerialize["price_type"] = o.PriceType
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	return toSerialize, nil
}

type NullableDtoInvoiceLineItemResponse struct {
	value *DtoInvoiceLineItemResponse
	isSet bool
}

func (v NullableDtoInvoiceLineItemResponse) Get() *DtoInvoiceLineItemResponse {
	return v.value
}

func (v *NullableDtoInvoiceLineItemResponse) Set(val *DtoInvoiceLineItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoInvoiceLineItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoInvoiceLineItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoInvoiceLineItemResponse(val *DtoInvoiceLineItemResponse) *NullableDtoInvoiceLineItemResponse {
	return &NullableDtoInvoiceLineItemResponse{value: val, isSet: true}
}

func (v NullableDtoInvoiceLineItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoInvoiceLineItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


