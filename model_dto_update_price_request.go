/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoUpdatePriceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoUpdatePriceRequest{}

// DtoUpdatePriceRequest struct for DtoUpdatePriceRequest
type DtoUpdatePriceRequest struct {
	Description *string `json:"description,omitempty"`
	LookupKey *string `json:"lookup_key,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewDtoUpdatePriceRequest instantiates a new DtoUpdatePriceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoUpdatePriceRequest() *DtoUpdatePriceRequest {
	this := DtoUpdatePriceRequest{}
	return &this
}

// NewDtoUpdatePriceRequestWithDefaults instantiates a new DtoUpdatePriceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoUpdatePriceRequestWithDefaults() *DtoUpdatePriceRequest {
	this := DtoUpdatePriceRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DtoUpdatePriceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePriceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DtoUpdatePriceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DtoUpdatePriceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLookupKey returns the LookupKey field value if set, zero value otherwise.
func (o *DtoUpdatePriceRequest) GetLookupKey() string {
	if o == nil || IsNil(o.LookupKey) {
		var ret string
		return ret
	}
	return *o.LookupKey
}

// GetLookupKeyOk returns a tuple with the LookupKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePriceRequest) GetLookupKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LookupKey) {
		return nil, false
	}
	return o.LookupKey, true
}

// HasLookupKey returns a boolean if a field has been set.
func (o *DtoUpdatePriceRequest) HasLookupKey() bool {
	if o != nil && !IsNil(o.LookupKey) {
		return true
	}

	return false
}

// SetLookupKey gets a reference to the given string and assigns it to the LookupKey field.
func (o *DtoUpdatePriceRequest) SetLookupKey(v string) {
	o.LookupKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoUpdatePriceRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePriceRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoUpdatePriceRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoUpdatePriceRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o DtoUpdatePriceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoUpdatePriceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LookupKey) {
		toSerialize["lookup_key"] = o.LookupKey
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableDtoUpdatePriceRequest struct {
	value *DtoUpdatePriceRequest
	isSet bool
}

func (v NullableDtoUpdatePriceRequest) Get() *DtoUpdatePriceRequest {
	return v.value
}

func (v *NullableDtoUpdatePriceRequest) Set(val *DtoUpdatePriceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoUpdatePriceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoUpdatePriceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoUpdatePriceRequest(val *DtoUpdatePriceRequest) *NullableDtoUpdatePriceRequest {
	return &NullableDtoUpdatePriceRequest{value: val, isSet: true}
}

func (v NullableDtoUpdatePriceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoUpdatePriceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


