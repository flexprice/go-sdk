/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoCustomerMultiCurrencyInvoiceSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCustomerMultiCurrencyInvoiceSummary{}

// DtoCustomerMultiCurrencyInvoiceSummary struct for DtoCustomerMultiCurrencyInvoiceSummary
type DtoCustomerMultiCurrencyInvoiceSummary struct {
	CustomerId *string `json:"customer_id,omitempty"`
	DefaultCurrency *string `json:"default_currency,omitempty"`
	Summaries []DtoCustomerInvoiceSummary `json:"summaries,omitempty"`
}

// NewDtoCustomerMultiCurrencyInvoiceSummary instantiates a new DtoCustomerMultiCurrencyInvoiceSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCustomerMultiCurrencyInvoiceSummary() *DtoCustomerMultiCurrencyInvoiceSummary {
	this := DtoCustomerMultiCurrencyInvoiceSummary{}
	return &this
}

// NewDtoCustomerMultiCurrencyInvoiceSummaryWithDefaults instantiates a new DtoCustomerMultiCurrencyInvoiceSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCustomerMultiCurrencyInvoiceSummaryWithDefaults() *DtoCustomerMultiCurrencyInvoiceSummary {
	this := DtoCustomerMultiCurrencyInvoiceSummary{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetDefaultCurrency() string {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret string
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetDefaultCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given string and assigns it to the DefaultCurrency field.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) SetDefaultCurrency(v string) {
	o.DefaultCurrency = &v
}

// GetSummaries returns the Summaries field value if set, zero value otherwise.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetSummaries() []DtoCustomerInvoiceSummary {
	if o == nil || IsNil(o.Summaries) {
		var ret []DtoCustomerInvoiceSummary
		return ret
	}
	return o.Summaries
}

// GetSummariesOk returns a tuple with the Summaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) GetSummariesOk() ([]DtoCustomerInvoiceSummary, bool) {
	if o == nil || IsNil(o.Summaries) {
		return nil, false
	}
	return o.Summaries, true
}

// HasSummaries returns a boolean if a field has been set.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) HasSummaries() bool {
	if o != nil && !IsNil(o.Summaries) {
		return true
	}

	return false
}

// SetSummaries gets a reference to the given []DtoCustomerInvoiceSummary and assigns it to the Summaries field.
func (o *DtoCustomerMultiCurrencyInvoiceSummary) SetSummaries(v []DtoCustomerInvoiceSummary) {
	o.Summaries = v
}

func (o DtoCustomerMultiCurrencyInvoiceSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCustomerMultiCurrencyInvoiceSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["default_currency"] = o.DefaultCurrency
	}
	if !IsNil(o.Summaries) {
		toSerialize["summaries"] = o.Summaries
	}
	return toSerialize, nil
}

type NullableDtoCustomerMultiCurrencyInvoiceSummary struct {
	value *DtoCustomerMultiCurrencyInvoiceSummary
	isSet bool
}

func (v NullableDtoCustomerMultiCurrencyInvoiceSummary) Get() *DtoCustomerMultiCurrencyInvoiceSummary {
	return v.value
}

func (v *NullableDtoCustomerMultiCurrencyInvoiceSummary) Set(val *DtoCustomerMultiCurrencyInvoiceSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCustomerMultiCurrencyInvoiceSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCustomerMultiCurrencyInvoiceSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCustomerMultiCurrencyInvoiceSummary(val *DtoCustomerMultiCurrencyInvoiceSummary) *NullableDtoCustomerMultiCurrencyInvoiceSummary {
	return &NullableDtoCustomerMultiCurrencyInvoiceSummary{value: val, isSet: true}
}

func (v NullableDtoCustomerMultiCurrencyInvoiceSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCustomerMultiCurrencyInvoiceSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


