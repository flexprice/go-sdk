/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreateInvoiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateInvoiceRequest{}

// DtoCreateInvoiceRequest struct for DtoCreateInvoiceRequest
type DtoCreateInvoiceRequest struct {
	AmountDue float32 `json:"amount_due"`
	AmountPaid *float32 `json:"amount_paid,omitempty"`
	BillingPeriod *string `json:"billing_period,omitempty"`
	BillingReason *TypesInvoiceBillingReason `json:"billing_reason,omitempty"`
	Currency string `json:"currency"`
	CustomerId string `json:"customer_id"`
	Description *string `json:"description,omitempty"`
	DueDate *string `json:"due_date,omitempty"`
	EnvironmentId *string `json:"environment_id,omitempty"`
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	InvoiceNumber *string `json:"invoice_number,omitempty"`
	InvoiceStatus *TypesInvoiceStatus `json:"invoice_status,omitempty"`
	InvoiceType *TypesInvoiceType `json:"invoice_type,omitempty"`
	LineItems []DtoCreateInvoiceLineItemRequest `json:"line_items,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	PaymentStatus *TypesPaymentStatus `json:"payment_status,omitempty"`
	PeriodEnd *string `json:"period_end,omitempty"`
	PeriodStart *string `json:"period_start,omitempty"`
	SubscriptionId *string `json:"subscription_id,omitempty"`
}

type _DtoCreateInvoiceRequest DtoCreateInvoiceRequest

// NewDtoCreateInvoiceRequest instantiates a new DtoCreateInvoiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateInvoiceRequest(amountDue float32, currency string, customerId string) *DtoCreateInvoiceRequest {
	this := DtoCreateInvoiceRequest{}
	this.AmountDue = amountDue
	this.Currency = currency
	this.CustomerId = customerId
	return &this
}

// NewDtoCreateInvoiceRequestWithDefaults instantiates a new DtoCreateInvoiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateInvoiceRequestWithDefaults() *DtoCreateInvoiceRequest {
	this := DtoCreateInvoiceRequest{}
	return &this
}

// GetAmountDue returns the AmountDue field value
func (o *DtoCreateInvoiceRequest) GetAmountDue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AmountDue
}

// GetAmountDueOk returns a tuple with the AmountDue field value
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetAmountDueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountDue, true
}

// SetAmountDue sets field value
func (o *DtoCreateInvoiceRequest) SetAmountDue(v float32) {
	o.AmountDue = v
}

// GetAmountPaid returns the AmountPaid field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetAmountPaid() float32 {
	if o == nil || IsNil(o.AmountPaid) {
		var ret float32
		return ret
	}
	return *o.AmountPaid
}

// GetAmountPaidOk returns a tuple with the AmountPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetAmountPaidOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountPaid) {
		return nil, false
	}
	return o.AmountPaid, true
}

// HasAmountPaid returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasAmountPaid() bool {
	if o != nil && !IsNil(o.AmountPaid) {
		return true
	}

	return false
}

// SetAmountPaid gets a reference to the given float32 and assigns it to the AmountPaid field.
func (o *DtoCreateInvoiceRequest) SetAmountPaid(v float32) {
	o.AmountPaid = &v
}

// GetBillingPeriod returns the BillingPeriod field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetBillingPeriod() string {
	if o == nil || IsNil(o.BillingPeriod) {
		var ret string
		return ret
	}
	return *o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetBillingPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriod) {
		return nil, false
	}
	return o.BillingPeriod, true
}

// HasBillingPeriod returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasBillingPeriod() bool {
	if o != nil && !IsNil(o.BillingPeriod) {
		return true
	}

	return false
}

// SetBillingPeriod gets a reference to the given string and assigns it to the BillingPeriod field.
func (o *DtoCreateInvoiceRequest) SetBillingPeriod(v string) {
	o.BillingPeriod = &v
}

// GetBillingReason returns the BillingReason field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetBillingReason() TypesInvoiceBillingReason {
	if o == nil || IsNil(o.BillingReason) {
		var ret TypesInvoiceBillingReason
		return ret
	}
	return *o.BillingReason
}

// GetBillingReasonOk returns a tuple with the BillingReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetBillingReasonOk() (*TypesInvoiceBillingReason, bool) {
	if o == nil || IsNil(o.BillingReason) {
		return nil, false
	}
	return o.BillingReason, true
}

// HasBillingReason returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasBillingReason() bool {
	if o != nil && !IsNil(o.BillingReason) {
		return true
	}

	return false
}

// SetBillingReason gets a reference to the given TypesInvoiceBillingReason and assigns it to the BillingReason field.
func (o *DtoCreateInvoiceRequest) SetBillingReason(v TypesInvoiceBillingReason) {
	o.BillingReason = &v
}

// GetCurrency returns the Currency field value
func (o *DtoCreateInvoiceRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *DtoCreateInvoiceRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetCustomerId returns the CustomerId field value
func (o *DtoCreateInvoiceRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *DtoCreateInvoiceRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DtoCreateInvoiceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *DtoCreateInvoiceRequest) SetDueDate(v string) {
	o.DueDate = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *DtoCreateInvoiceRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetIdempotencyKey returns the IdempotencyKey field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetIdempotencyKey() string {
	if o == nil || IsNil(o.IdempotencyKey) {
		var ret string
		return ret
	}
	return *o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IdempotencyKey) {
		return nil, false
	}
	return o.IdempotencyKey, true
}

// HasIdempotencyKey returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasIdempotencyKey() bool {
	if o != nil && !IsNil(o.IdempotencyKey) {
		return true
	}

	return false
}

// SetIdempotencyKey gets a reference to the given string and assigns it to the IdempotencyKey field.
func (o *DtoCreateInvoiceRequest) SetIdempotencyKey(v string) {
	o.IdempotencyKey = &v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *DtoCreateInvoiceRequest) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetInvoiceStatus returns the InvoiceStatus field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetInvoiceStatus() TypesInvoiceStatus {
	if o == nil || IsNil(o.InvoiceStatus) {
		var ret TypesInvoiceStatus
		return ret
	}
	return *o.InvoiceStatus
}

// GetInvoiceStatusOk returns a tuple with the InvoiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetInvoiceStatusOk() (*TypesInvoiceStatus, bool) {
	if o == nil || IsNil(o.InvoiceStatus) {
		return nil, false
	}
	return o.InvoiceStatus, true
}

// HasInvoiceStatus returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasInvoiceStatus() bool {
	if o != nil && !IsNil(o.InvoiceStatus) {
		return true
	}

	return false
}

// SetInvoiceStatus gets a reference to the given TypesInvoiceStatus and assigns it to the InvoiceStatus field.
func (o *DtoCreateInvoiceRequest) SetInvoiceStatus(v TypesInvoiceStatus) {
	o.InvoiceStatus = &v
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetInvoiceType() TypesInvoiceType {
	if o == nil || IsNil(o.InvoiceType) {
		var ret TypesInvoiceType
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetInvoiceTypeOk() (*TypesInvoiceType, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given TypesInvoiceType and assigns it to the InvoiceType field.
func (o *DtoCreateInvoiceRequest) SetInvoiceType(v TypesInvoiceType) {
	o.InvoiceType = &v
}

// GetLineItems returns the LineItems field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetLineItems() []DtoCreateInvoiceLineItemRequest {
	if o == nil || IsNil(o.LineItems) {
		var ret []DtoCreateInvoiceLineItemRequest
		return ret
	}
	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetLineItemsOk() ([]DtoCreateInvoiceLineItemRequest, bool) {
	if o == nil || IsNil(o.LineItems) {
		return nil, false
	}
	return o.LineItems, true
}

// HasLineItems returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasLineItems() bool {
	if o != nil && !IsNil(o.LineItems) {
		return true
	}

	return false
}

// SetLineItems gets a reference to the given []DtoCreateInvoiceLineItemRequest and assigns it to the LineItems field.
func (o *DtoCreateInvoiceRequest) SetLineItems(v []DtoCreateInvoiceLineItemRequest) {
	o.LineItems = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreateInvoiceRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetPaymentStatus() TypesPaymentStatus {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret TypesPaymentStatus
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetPaymentStatusOk() (*TypesPaymentStatus, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given TypesPaymentStatus and assigns it to the PaymentStatus field.
func (o *DtoCreateInvoiceRequest) SetPaymentStatus(v TypesPaymentStatus) {
	o.PaymentStatus = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetPeriodEnd() string {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret string
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given string and assigns it to the PeriodEnd field.
func (o *DtoCreateInvoiceRequest) SetPeriodEnd(v string) {
	o.PeriodEnd = &v
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetPeriodStart() string {
	if o == nil || IsNil(o.PeriodStart) {
		var ret string
		return ret
	}
	return *o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodStart) {
		return nil, false
	}
	return o.PeriodStart, true
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasPeriodStart() bool {
	if o != nil && !IsNil(o.PeriodStart) {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given string and assigns it to the PeriodStart field.
func (o *DtoCreateInvoiceRequest) SetPeriodStart(v string) {
	o.PeriodStart = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DtoCreateInvoiceRequest) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DtoCreateInvoiceRequest) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DtoCreateInvoiceRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o DtoCreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateInvoiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount_due"] = o.AmountDue
	if !IsNil(o.AmountPaid) {
		toSerialize["amount_paid"] = o.AmountPaid
	}
	if !IsNil(o.BillingPeriod) {
		toSerialize["billing_period"] = o.BillingPeriod
	}
	if !IsNil(o.BillingReason) {
		toSerialize["billing_reason"] = o.BillingReason
	}
	toSerialize["currency"] = o.Currency
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.IdempotencyKey) {
		toSerialize["idempotency_key"] = o.IdempotencyKey
	}
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoice_number"] = o.InvoiceNumber
	}
	if !IsNil(o.InvoiceStatus) {
		toSerialize["invoice_status"] = o.InvoiceStatus
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["invoice_type"] = o.InvoiceType
	}
	if !IsNil(o.LineItems) {
		toSerialize["line_items"] = o.LineItems
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	if !IsNil(o.PeriodEnd) {
		toSerialize["period_end"] = o.PeriodEnd
	}
	if !IsNil(o.PeriodStart) {
		toSerialize["period_start"] = o.PeriodStart
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	return toSerialize, nil
}

func (o *DtoCreateInvoiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount_due",
		"currency",
		"customer_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateInvoiceRequest := _DtoCreateInvoiceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateInvoiceRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateInvoiceRequest(varDtoCreateInvoiceRequest)

	return err
}

type NullableDtoCreateInvoiceRequest struct {
	value *DtoCreateInvoiceRequest
	isSet bool
}

func (v NullableDtoCreateInvoiceRequest) Get() *DtoCreateInvoiceRequest {
	return v.value
}

func (v *NullableDtoCreateInvoiceRequest) Set(val *DtoCreateInvoiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateInvoiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateInvoiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateInvoiceRequest(val *DtoCreateInvoiceRequest) *NullableDtoCreateInvoiceRequest {
	return &NullableDtoCreateInvoiceRequest{value: val, isSet: true}
}

func (v NullableDtoCreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateInvoiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


