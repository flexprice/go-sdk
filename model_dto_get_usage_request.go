/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoGetUsageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoGetUsageRequest{}

// DtoGetUsageRequest struct for DtoGetUsageRequest
type DtoGetUsageRequest struct {
	AggregationType TypesAggregationType `json:"aggregation_type"`
	CustomerId *string `json:"customer_id,omitempty"`
	EndTime *string `json:"end_time,omitempty"`
	EventName string `json:"event_name"`
	ExternalCustomerId *string `json:"external_customer_id,omitempty"`
	Filters *map[string][]string `json:"filters,omitempty"`
	// will be empty/ignored in case of COUNT
	PropertyName *string `json:"property_name,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
	WindowSize *TypesWindowSize `json:"window_size,omitempty"`
}

type _DtoGetUsageRequest DtoGetUsageRequest

// NewDtoGetUsageRequest instantiates a new DtoGetUsageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoGetUsageRequest(aggregationType TypesAggregationType, eventName string) *DtoGetUsageRequest {
	this := DtoGetUsageRequest{}
	this.AggregationType = aggregationType
	this.EventName = eventName
	return &this
}

// NewDtoGetUsageRequestWithDefaults instantiates a new DtoGetUsageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoGetUsageRequestWithDefaults() *DtoGetUsageRequest {
	this := DtoGetUsageRequest{}
	return &this
}

// GetAggregationType returns the AggregationType field value
func (o *DtoGetUsageRequest) GetAggregationType() TypesAggregationType {
	if o == nil {
		var ret TypesAggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetAggregationTypeOk() (*TypesAggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *DtoGetUsageRequest) SetAggregationType(v TypesAggregationType) {
	o.AggregationType = v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DtoGetUsageRequest) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *DtoGetUsageRequest) SetEndTime(v string) {
	o.EndTime = &v
}

// GetEventName returns the EventName field value
func (o *DtoGetUsageRequest) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *DtoGetUsageRequest) SetEventName(v string) {
	o.EventName = v
}

// GetExternalCustomerId returns the ExternalCustomerId field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetExternalCustomerId() string {
	if o == nil || IsNil(o.ExternalCustomerId) {
		var ret string
		return ret
	}
	return *o.ExternalCustomerId
}

// GetExternalCustomerIdOk returns a tuple with the ExternalCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetExternalCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalCustomerId) {
		return nil, false
	}
	return o.ExternalCustomerId, true
}

// HasExternalCustomerId returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasExternalCustomerId() bool {
	if o != nil && !IsNil(o.ExternalCustomerId) {
		return true
	}

	return false
}

// SetExternalCustomerId gets a reference to the given string and assigns it to the ExternalCustomerId field.
func (o *DtoGetUsageRequest) SetExternalCustomerId(v string) {
	o.ExternalCustomerId = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetFilters() map[string][]string {
	if o == nil || IsNil(o.Filters) {
		var ret map[string][]string
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetFiltersOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given map[string][]string and assigns it to the Filters field.
func (o *DtoGetUsageRequest) SetFilters(v map[string][]string) {
	o.Filters = &v
}

// GetPropertyName returns the PropertyName field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetPropertyName() string {
	if o == nil || IsNil(o.PropertyName) {
		var ret string
		return ret
	}
	return *o.PropertyName
}

// GetPropertyNameOk returns a tuple with the PropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyName) {
		return nil, false
	}
	return o.PropertyName, true
}

// HasPropertyName returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasPropertyName() bool {
	if o != nil && !IsNil(o.PropertyName) {
		return true
	}

	return false
}

// SetPropertyName gets a reference to the given string and assigns it to the PropertyName field.
func (o *DtoGetUsageRequest) SetPropertyName(v string) {
	o.PropertyName = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *DtoGetUsageRequest) SetStartTime(v string) {
	o.StartTime = &v
}

// GetWindowSize returns the WindowSize field value if set, zero value otherwise.
func (o *DtoGetUsageRequest) GetWindowSize() TypesWindowSize {
	if o == nil || IsNil(o.WindowSize) {
		var ret TypesWindowSize
		return ret
	}
	return *o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetUsageRequest) GetWindowSizeOk() (*TypesWindowSize, bool) {
	if o == nil || IsNil(o.WindowSize) {
		return nil, false
	}
	return o.WindowSize, true
}

// HasWindowSize returns a boolean if a field has been set.
func (o *DtoGetUsageRequest) HasWindowSize() bool {
	if o != nil && !IsNil(o.WindowSize) {
		return true
	}

	return false
}

// SetWindowSize gets a reference to the given TypesWindowSize and assigns it to the WindowSize field.
func (o *DtoGetUsageRequest) SetWindowSize(v TypesWindowSize) {
	o.WindowSize = &v
}

func (o DtoGetUsageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoGetUsageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aggregation_type"] = o.AggregationType
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	toSerialize["event_name"] = o.EventName
	if !IsNil(o.ExternalCustomerId) {
		toSerialize["external_customer_id"] = o.ExternalCustomerId
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.PropertyName) {
		toSerialize["property_name"] = o.PropertyName
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.WindowSize) {
		toSerialize["window_size"] = o.WindowSize
	}
	return toSerialize, nil
}

func (o *DtoGetUsageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregation_type",
		"event_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoGetUsageRequest := _DtoGetUsageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoGetUsageRequest)

	if err != nil {
		return err
	}

	*o = DtoGetUsageRequest(varDtoGetUsageRequest)

	return err
}

type NullableDtoGetUsageRequest struct {
	value *DtoGetUsageRequest
	isSet bool
}

func (v NullableDtoGetUsageRequest) Get() *DtoGetUsageRequest {
	return v.value
}

func (v *NullableDtoGetUsageRequest) Set(val *DtoGetUsageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoGetUsageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoGetUsageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoGetUsageRequest(val *DtoGetUsageRequest) *NullableDtoGetUsageRequest {
	return &NullableDtoGetUsageRequest{value: val, isSet: true}
}

func (v NullableDtoGetUsageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoGetUsageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


