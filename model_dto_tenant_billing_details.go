/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoTenantBillingDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoTenantBillingDetails{}

// DtoTenantBillingDetails struct for DtoTenantBillingDetails
type DtoTenantBillingDetails struct {
	Address *DtoAddress `json:"address,omitempty"`
	Email *string `json:"email,omitempty"`
	HelpEmail *string `json:"help_email,omitempty"`
	Phone *string `json:"phone,omitempty"`
}

// NewDtoTenantBillingDetails instantiates a new DtoTenantBillingDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoTenantBillingDetails() *DtoTenantBillingDetails {
	this := DtoTenantBillingDetails{}
	return &this
}

// NewDtoTenantBillingDetailsWithDefaults instantiates a new DtoTenantBillingDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoTenantBillingDetailsWithDefaults() *DtoTenantBillingDetails {
	this := DtoTenantBillingDetails{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DtoTenantBillingDetails) GetAddress() DtoAddress {
	if o == nil || IsNil(o.Address) {
		var ret DtoAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTenantBillingDetails) GetAddressOk() (*DtoAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DtoTenantBillingDetails) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given DtoAddress and assigns it to the Address field.
func (o *DtoTenantBillingDetails) SetAddress(v DtoAddress) {
	o.Address = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DtoTenantBillingDetails) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTenantBillingDetails) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DtoTenantBillingDetails) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DtoTenantBillingDetails) SetEmail(v string) {
	o.Email = &v
}

// GetHelpEmail returns the HelpEmail field value if set, zero value otherwise.
func (o *DtoTenantBillingDetails) GetHelpEmail() string {
	if o == nil || IsNil(o.HelpEmail) {
		var ret string
		return ret
	}
	return *o.HelpEmail
}

// GetHelpEmailOk returns a tuple with the HelpEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTenantBillingDetails) GetHelpEmailOk() (*string, bool) {
	if o == nil || IsNil(o.HelpEmail) {
		return nil, false
	}
	return o.HelpEmail, true
}

// HasHelpEmail returns a boolean if a field has been set.
func (o *DtoTenantBillingDetails) HasHelpEmail() bool {
	if o != nil && !IsNil(o.HelpEmail) {
		return true
	}

	return false
}

// SetHelpEmail gets a reference to the given string and assigns it to the HelpEmail field.
func (o *DtoTenantBillingDetails) SetHelpEmail(v string) {
	o.HelpEmail = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *DtoTenantBillingDetails) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTenantBillingDetails) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *DtoTenantBillingDetails) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *DtoTenantBillingDetails) SetPhone(v string) {
	o.Phone = &v
}

func (o DtoTenantBillingDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoTenantBillingDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.HelpEmail) {
		toSerialize["help_email"] = o.HelpEmail
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableDtoTenantBillingDetails struct {
	value *DtoTenantBillingDetails
	isSet bool
}

func (v NullableDtoTenantBillingDetails) Get() *DtoTenantBillingDetails {
	return v.value
}

func (v *NullableDtoTenantBillingDetails) Set(val *DtoTenantBillingDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoTenantBillingDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoTenantBillingDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoTenantBillingDetails(val *DtoTenantBillingDetails) *NullableDtoTenantBillingDetails {
	return &NullableDtoTenantBillingDetails{value: val, isSet: true}
}

func (v NullableDtoTenantBillingDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoTenantBillingDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


