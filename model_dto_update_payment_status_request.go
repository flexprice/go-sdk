/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoUpdatePaymentStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoUpdatePaymentStatusRequest{}

// DtoUpdatePaymentStatusRequest struct for DtoUpdatePaymentStatusRequest
type DtoUpdatePaymentStatusRequest struct {
	Amount *float32 `json:"amount,omitempty"`
	PaymentStatus TypesPaymentStatus `json:"payment_status"`
}

type _DtoUpdatePaymentStatusRequest DtoUpdatePaymentStatusRequest

// NewDtoUpdatePaymentStatusRequest instantiates a new DtoUpdatePaymentStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoUpdatePaymentStatusRequest(paymentStatus TypesPaymentStatus) *DtoUpdatePaymentStatusRequest {
	this := DtoUpdatePaymentStatusRequest{}
	this.PaymentStatus = paymentStatus
	return &this
}

// NewDtoUpdatePaymentStatusRequestWithDefaults instantiates a new DtoUpdatePaymentStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoUpdatePaymentStatusRequestWithDefaults() *DtoUpdatePaymentStatusRequest {
	this := DtoUpdatePaymentStatusRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DtoUpdatePaymentStatusRequest) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUpdatePaymentStatusRequest) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DtoUpdatePaymentStatusRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DtoUpdatePaymentStatusRequest) SetAmount(v float32) {
	o.Amount = &v
}

// GetPaymentStatus returns the PaymentStatus field value
func (o *DtoUpdatePaymentStatusRequest) GetPaymentStatus() TypesPaymentStatus {
	if o == nil {
		var ret TypesPaymentStatus
		return ret
	}

	return o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value
// and a boolean to check if the value has been set.
func (o *DtoUpdatePaymentStatusRequest) GetPaymentStatusOk() (*TypesPaymentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentStatus, true
}

// SetPaymentStatus sets field value
func (o *DtoUpdatePaymentStatusRequest) SetPaymentStatus(v TypesPaymentStatus) {
	o.PaymentStatus = v
}

func (o DtoUpdatePaymentStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoUpdatePaymentStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["payment_status"] = o.PaymentStatus
	return toSerialize, nil
}

func (o *DtoUpdatePaymentStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoUpdatePaymentStatusRequest := _DtoUpdatePaymentStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoUpdatePaymentStatusRequest)

	if err != nil {
		return err
	}

	*o = DtoUpdatePaymentStatusRequest(varDtoUpdatePaymentStatusRequest)

	return err
}

type NullableDtoUpdatePaymentStatusRequest struct {
	value *DtoUpdatePaymentStatusRequest
	isSet bool
}

func (v NullableDtoUpdatePaymentStatusRequest) Get() *DtoUpdatePaymentStatusRequest {
	return v.value
}

func (v *NullableDtoUpdatePaymentStatusRequest) Set(val *DtoUpdatePaymentStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoUpdatePaymentStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoUpdatePaymentStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoUpdatePaymentStatusRequest(val *DtoUpdatePaymentStatusRequest) *NullableDtoUpdatePaymentStatusRequest {
	return &NullableDtoUpdatePaymentStatusRequest{value: val, isSet: true}
}

func (v NullableDtoUpdatePaymentStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoUpdatePaymentStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


