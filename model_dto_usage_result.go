/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoUsageResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoUsageResult{}

// DtoUsageResult struct for DtoUsageResult
type DtoUsageResult struct {
	Value *float32 `json:"value,omitempty"`
	WindowSize *string `json:"window_size,omitempty"`
}

// NewDtoUsageResult instantiates a new DtoUsageResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoUsageResult() *DtoUsageResult {
	this := DtoUsageResult{}
	return &this
}

// NewDtoUsageResultWithDefaults instantiates a new DtoUsageResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoUsageResultWithDefaults() *DtoUsageResult {
	this := DtoUsageResult{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DtoUsageResult) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUsageResult) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DtoUsageResult) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *DtoUsageResult) SetValue(v float32) {
	o.Value = &v
}

// GetWindowSize returns the WindowSize field value if set, zero value otherwise.
func (o *DtoUsageResult) GetWindowSize() string {
	if o == nil || IsNil(o.WindowSize) {
		var ret string
		return ret
	}
	return *o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoUsageResult) GetWindowSizeOk() (*string, bool) {
	if o == nil || IsNil(o.WindowSize) {
		return nil, false
	}
	return o.WindowSize, true
}

// HasWindowSize returns a boolean if a field has been set.
func (o *DtoUsageResult) HasWindowSize() bool {
	if o != nil && !IsNil(o.WindowSize) {
		return true
	}

	return false
}

// SetWindowSize gets a reference to the given string and assigns it to the WindowSize field.
func (o *DtoUsageResult) SetWindowSize(v string) {
	o.WindowSize = &v
}

func (o DtoUsageResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoUsageResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.WindowSize) {
		toSerialize["window_size"] = o.WindowSize
	}
	return toSerialize, nil
}

type NullableDtoUsageResult struct {
	value *DtoUsageResult
	isSet bool
}

func (v NullableDtoUsageResult) Get() *DtoUsageResult {
	return v.value
}

func (v *NullableDtoUsageResult) Set(val *DtoUsageResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoUsageResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoUsageResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoUsageResult(val *DtoUsageResult) *NullableDtoUsageResult {
	return &NullableDtoUsageResult{value: val, isSet: true}
}

func (v NullableDtoUsageResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoUsageResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


