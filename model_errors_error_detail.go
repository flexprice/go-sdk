/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
)

// checks if the ErrorsErrorDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorsErrorDetail{}

// ErrorsErrorDetail struct for ErrorsErrorDetail
type ErrorsErrorDetail struct {
	Details map[string]map[string]interface{} `json:"details,omitempty"`
	InternalError *string `json:"internal_error,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewErrorsErrorDetail instantiates a new ErrorsErrorDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorsErrorDetail() *ErrorsErrorDetail {
	this := ErrorsErrorDetail{}
	return &this
}

// NewErrorsErrorDetailWithDefaults instantiates a new ErrorsErrorDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorsErrorDetailWithDefaults() *ErrorsErrorDetail {
	this := ErrorsErrorDetail{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ErrorsErrorDetail) GetDetails() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Details) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsErrorDetail) GetDetailsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ErrorsErrorDetail) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]map[string]interface{} and assigns it to the Details field.
func (o *ErrorsErrorDetail) SetDetails(v map[string]map[string]interface{}) {
	o.Details = v
}

// GetInternalError returns the InternalError field value if set, zero value otherwise.
func (o *ErrorsErrorDetail) GetInternalError() string {
	if o == nil || IsNil(o.InternalError) {
		var ret string
		return ret
	}
	return *o.InternalError
}

// GetInternalErrorOk returns a tuple with the InternalError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsErrorDetail) GetInternalErrorOk() (*string, bool) {
	if o == nil || IsNil(o.InternalError) {
		return nil, false
	}
	return o.InternalError, true
}

// HasInternalError returns a boolean if a field has been set.
func (o *ErrorsErrorDetail) HasInternalError() bool {
	if o != nil && !IsNil(o.InternalError) {
		return true
	}

	return false
}

// SetInternalError gets a reference to the given string and assigns it to the InternalError field.
func (o *ErrorsErrorDetail) SetInternalError(v string) {
	o.InternalError = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorsErrorDetail) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsErrorDetail) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorsErrorDetail) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorsErrorDetail) SetMessage(v string) {
	o.Message = &v
}

func (o ErrorsErrorDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorsErrorDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.InternalError) {
		toSerialize["internal_error"] = o.InternalError
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableErrorsErrorDetail struct {
	value *ErrorsErrorDetail
	isSet bool
}

func (v NullableErrorsErrorDetail) Get() *ErrorsErrorDetail {
	return v.value
}

func (v *NullableErrorsErrorDetail) Set(val *ErrorsErrorDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorsErrorDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorsErrorDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorsErrorDetail(val *ErrorsErrorDetail) *NullableErrorsErrorDetail {
	return &NullableErrorsErrorDetail{value: val, isSet: true}
}

func (v NullableErrorsErrorDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorsErrorDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


