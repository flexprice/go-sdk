/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreateInvoiceLineItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateInvoiceLineItemRequest{}

// DtoCreateInvoiceLineItemRequest struct for DtoCreateInvoiceLineItemRequest
type DtoCreateInvoiceLineItemRequest struct {
	Amount float32 `json:"amount"`
	DisplayName *string `json:"display_name,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	MeterDisplayName *string `json:"meter_display_name,omitempty"`
	MeterId *string `json:"meter_id,omitempty"`
	PeriodEnd *string `json:"period_end,omitempty"`
	PeriodStart *string `json:"period_start,omitempty"`
	PlanDisplayName *string `json:"plan_display_name,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
	PriceId *string `json:"price_id,omitempty"`
	PriceType *string `json:"price_type,omitempty"`
	Quantity float32 `json:"quantity"`
}

type _DtoCreateInvoiceLineItemRequest DtoCreateInvoiceLineItemRequest

// NewDtoCreateInvoiceLineItemRequest instantiates a new DtoCreateInvoiceLineItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateInvoiceLineItemRequest(amount float32, quantity float32) *DtoCreateInvoiceLineItemRequest {
	this := DtoCreateInvoiceLineItemRequest{}
	this.Amount = amount
	this.Quantity = quantity
	return &this
}

// NewDtoCreateInvoiceLineItemRequestWithDefaults instantiates a new DtoCreateInvoiceLineItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateInvoiceLineItemRequestWithDefaults() *DtoCreateInvoiceLineItemRequest {
	this := DtoCreateInvoiceLineItemRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *DtoCreateInvoiceLineItemRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DtoCreateInvoiceLineItemRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DtoCreateInvoiceLineItemRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreateInvoiceLineItemRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMeterDisplayName returns the MeterDisplayName field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetMeterDisplayName() string {
	if o == nil || IsNil(o.MeterDisplayName) {
		var ret string
		return ret
	}
	return *o.MeterDisplayName
}

// GetMeterDisplayNameOk returns a tuple with the MeterDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetMeterDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.MeterDisplayName) {
		return nil, false
	}
	return o.MeterDisplayName, true
}

// HasMeterDisplayName returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasMeterDisplayName() bool {
	if o != nil && !IsNil(o.MeterDisplayName) {
		return true
	}

	return false
}

// SetMeterDisplayName gets a reference to the given string and assigns it to the MeterDisplayName field.
func (o *DtoCreateInvoiceLineItemRequest) SetMeterDisplayName(v string) {
	o.MeterDisplayName = &v
}

// GetMeterId returns the MeterId field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetMeterId() string {
	if o == nil || IsNil(o.MeterId) {
		var ret string
		return ret
	}
	return *o.MeterId
}

// GetMeterIdOk returns a tuple with the MeterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetMeterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MeterId) {
		return nil, false
	}
	return o.MeterId, true
}

// HasMeterId returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasMeterId() bool {
	if o != nil && !IsNil(o.MeterId) {
		return true
	}

	return false
}

// SetMeterId gets a reference to the given string and assigns it to the MeterId field.
func (o *DtoCreateInvoiceLineItemRequest) SetMeterId(v string) {
	o.MeterId = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPeriodEnd() string {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret string
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given string and assigns it to the PeriodEnd field.
func (o *DtoCreateInvoiceLineItemRequest) SetPeriodEnd(v string) {
	o.PeriodEnd = &v
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPeriodStart() string {
	if o == nil || IsNil(o.PeriodStart) {
		var ret string
		return ret
	}
	return *o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodStart) {
		return nil, false
	}
	return o.PeriodStart, true
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPeriodStart() bool {
	if o != nil && !IsNil(o.PeriodStart) {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given string and assigns it to the PeriodStart field.
func (o *DtoCreateInvoiceLineItemRequest) SetPeriodStart(v string) {
	o.PeriodStart = &v
}

// GetPlanDisplayName returns the PlanDisplayName field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPlanDisplayName() string {
	if o == nil || IsNil(o.PlanDisplayName) {
		var ret string
		return ret
	}
	return *o.PlanDisplayName
}

// GetPlanDisplayNameOk returns a tuple with the PlanDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPlanDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanDisplayName) {
		return nil, false
	}
	return o.PlanDisplayName, true
}

// HasPlanDisplayName returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPlanDisplayName() bool {
	if o != nil && !IsNil(o.PlanDisplayName) {
		return true
	}

	return false
}

// SetPlanDisplayName gets a reference to the given string and assigns it to the PlanDisplayName field.
func (o *DtoCreateInvoiceLineItemRequest) SetPlanDisplayName(v string) {
	o.PlanDisplayName = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *DtoCreateInvoiceLineItemRequest) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPriceId returns the PriceId field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPriceId() string {
	if o == nil || IsNil(o.PriceId) {
		var ret string
		return ret
	}
	return *o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PriceId) {
		return nil, false
	}
	return o.PriceId, true
}

// HasPriceId returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPriceId() bool {
	if o != nil && !IsNil(o.PriceId) {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given string and assigns it to the PriceId field.
func (o *DtoCreateInvoiceLineItemRequest) SetPriceId(v string) {
	o.PriceId = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *DtoCreateInvoiceLineItemRequest) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *DtoCreateInvoiceLineItemRequest) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *DtoCreateInvoiceLineItemRequest) SetPriceType(v string) {
	o.PriceType = &v
}

// GetQuantity returns the Quantity field value
func (o *DtoCreateInvoiceLineItemRequest) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *DtoCreateInvoiceLineItemRequest) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *DtoCreateInvoiceLineItemRequest) SetQuantity(v float32) {
	o.Quantity = v
}

func (o DtoCreateInvoiceLineItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateInvoiceLineItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MeterDisplayName) {
		toSerialize["meter_display_name"] = o.MeterDisplayName
	}
	if !IsNil(o.MeterId) {
		toSerialize["meter_id"] = o.MeterId
	}
	if !IsNil(o.PeriodEnd) {
		toSerialize["period_end"] = o.PeriodEnd
	}
	if !IsNil(o.PeriodStart) {
		toSerialize["period_start"] = o.PeriodStart
	}
	if !IsNil(o.PlanDisplayName) {
		toSerialize["plan_display_name"] = o.PlanDisplayName
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.PriceId) {
		toSerialize["price_id"] = o.PriceId
	}
	if !IsNil(o.PriceType) {
		toSerialize["price_type"] = o.PriceType
	}
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

func (o *DtoCreateInvoiceLineItemRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateInvoiceLineItemRequest := _DtoCreateInvoiceLineItemRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateInvoiceLineItemRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateInvoiceLineItemRequest(varDtoCreateInvoiceLineItemRequest)

	return err
}

type NullableDtoCreateInvoiceLineItemRequest struct {
	value *DtoCreateInvoiceLineItemRequest
	isSet bool
}

func (v NullableDtoCreateInvoiceLineItemRequest) Get() *DtoCreateInvoiceLineItemRequest {
	return v.value
}

func (v *NullableDtoCreateInvoiceLineItemRequest) Set(val *DtoCreateInvoiceLineItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateInvoiceLineItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateInvoiceLineItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateInvoiceLineItemRequest(val *DtoCreateInvoiceLineItemRequest) *NullableDtoCreateInvoiceLineItemRequest {
	return &NullableDtoCreateInvoiceLineItemRequest{value: val, isSet: true}
}

func (v NullableDtoCreateInvoiceLineItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateInvoiceLineItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


