/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoGetEventsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoGetEventsRequest{}

// DtoGetEventsRequest struct for DtoGetEventsRequest
type DtoGetEventsRequest struct {
	CountTotal *bool `json:"count_total,omitempty"`
	EndTime *string `json:"end_time,omitempty"`
	EventId *string `json:"event_id,omitempty"`
	EventName string `json:"event_name"`
	ExternalCustomerId *string `json:"external_customer_id,omitempty"`
	IterFirstKey *string `json:"iter_first_key,omitempty"`
	IterLastKey *string `json:"iter_last_key,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	PropertyFilters *map[string][]string `json:"property_filters,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
}

type _DtoGetEventsRequest DtoGetEventsRequest

// NewDtoGetEventsRequest instantiates a new DtoGetEventsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoGetEventsRequest(eventName string) *DtoGetEventsRequest {
	this := DtoGetEventsRequest{}
	this.EventName = eventName
	return &this
}

// NewDtoGetEventsRequestWithDefaults instantiates a new DtoGetEventsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoGetEventsRequestWithDefaults() *DtoGetEventsRequest {
	this := DtoGetEventsRequest{}
	return &this
}

// GetCountTotal returns the CountTotal field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetCountTotal() bool {
	if o == nil || IsNil(o.CountTotal) {
		var ret bool
		return ret
	}
	return *o.CountTotal
}

// GetCountTotalOk returns a tuple with the CountTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetCountTotalOk() (*bool, bool) {
	if o == nil || IsNil(o.CountTotal) {
		return nil, false
	}
	return o.CountTotal, true
}

// HasCountTotal returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasCountTotal() bool {
	if o != nil && !IsNil(o.CountTotal) {
		return true
	}

	return false
}

// SetCountTotal gets a reference to the given bool and assigns it to the CountTotal field.
func (o *DtoGetEventsRequest) SetCountTotal(v bool) {
	o.CountTotal = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *DtoGetEventsRequest) SetEndTime(v string) {
	o.EndTime = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetEventId() string {
	if o == nil || IsNil(o.EventId) {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *DtoGetEventsRequest) SetEventId(v string) {
	o.EventId = &v
}

// GetEventName returns the EventName field value
func (o *DtoGetEventsRequest) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *DtoGetEventsRequest) SetEventName(v string) {
	o.EventName = v
}

// GetExternalCustomerId returns the ExternalCustomerId field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetExternalCustomerId() string {
	if o == nil || IsNil(o.ExternalCustomerId) {
		var ret string
		return ret
	}
	return *o.ExternalCustomerId
}

// GetExternalCustomerIdOk returns a tuple with the ExternalCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetExternalCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalCustomerId) {
		return nil, false
	}
	return o.ExternalCustomerId, true
}

// HasExternalCustomerId returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasExternalCustomerId() bool {
	if o != nil && !IsNil(o.ExternalCustomerId) {
		return true
	}

	return false
}

// SetExternalCustomerId gets a reference to the given string and assigns it to the ExternalCustomerId field.
func (o *DtoGetEventsRequest) SetExternalCustomerId(v string) {
	o.ExternalCustomerId = &v
}

// GetIterFirstKey returns the IterFirstKey field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetIterFirstKey() string {
	if o == nil || IsNil(o.IterFirstKey) {
		var ret string
		return ret
	}
	return *o.IterFirstKey
}

// GetIterFirstKeyOk returns a tuple with the IterFirstKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetIterFirstKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IterFirstKey) {
		return nil, false
	}
	return o.IterFirstKey, true
}

// HasIterFirstKey returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasIterFirstKey() bool {
	if o != nil && !IsNil(o.IterFirstKey) {
		return true
	}

	return false
}

// SetIterFirstKey gets a reference to the given string and assigns it to the IterFirstKey field.
func (o *DtoGetEventsRequest) SetIterFirstKey(v string) {
	o.IterFirstKey = &v
}

// GetIterLastKey returns the IterLastKey field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetIterLastKey() string {
	if o == nil || IsNil(o.IterLastKey) {
		var ret string
		return ret
	}
	return *o.IterLastKey
}

// GetIterLastKeyOk returns a tuple with the IterLastKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetIterLastKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IterLastKey) {
		return nil, false
	}
	return o.IterLastKey, true
}

// HasIterLastKey returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasIterLastKey() bool {
	if o != nil && !IsNil(o.IterLastKey) {
		return true
	}

	return false
}

// SetIterLastKey gets a reference to the given string and assigns it to the IterLastKey field.
func (o *DtoGetEventsRequest) SetIterLastKey(v string) {
	o.IterLastKey = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *DtoGetEventsRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *DtoGetEventsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPropertyFilters returns the PropertyFilters field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetPropertyFilters() map[string][]string {
	if o == nil || IsNil(o.PropertyFilters) {
		var ret map[string][]string
		return ret
	}
	return *o.PropertyFilters
}

// GetPropertyFiltersOk returns a tuple with the PropertyFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetPropertyFiltersOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.PropertyFilters) {
		return nil, false
	}
	return o.PropertyFilters, true
}

// HasPropertyFilters returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasPropertyFilters() bool {
	if o != nil && !IsNil(o.PropertyFilters) {
		return true
	}

	return false
}

// SetPropertyFilters gets a reference to the given map[string][]string and assigns it to the PropertyFilters field.
func (o *DtoGetEventsRequest) SetPropertyFilters(v map[string][]string) {
	o.PropertyFilters = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DtoGetEventsRequest) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGetEventsRequest) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DtoGetEventsRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *DtoGetEventsRequest) SetStartTime(v string) {
	o.StartTime = &v
}

func (o DtoGetEventsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoGetEventsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CountTotal) {
		toSerialize["count_total"] = o.CountTotal
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.EventId) {
		toSerialize["event_id"] = o.EventId
	}
	toSerialize["event_name"] = o.EventName
	if !IsNil(o.ExternalCustomerId) {
		toSerialize["external_customer_id"] = o.ExternalCustomerId
	}
	if !IsNil(o.IterFirstKey) {
		toSerialize["iter_first_key"] = o.IterFirstKey
	}
	if !IsNil(o.IterLastKey) {
		toSerialize["iter_last_key"] = o.IterLastKey
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.PropertyFilters) {
		toSerialize["property_filters"] = o.PropertyFilters
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	return toSerialize, nil
}

func (o *DtoGetEventsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoGetEventsRequest := _DtoGetEventsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoGetEventsRequest)

	if err != nil {
		return err
	}

	*o = DtoGetEventsRequest(varDtoGetEventsRequest)

	return err
}

type NullableDtoGetEventsRequest struct {
	value *DtoGetEventsRequest
	isSet bool
}

func (v NullableDtoGetEventsRequest) Get() *DtoGetEventsRequest {
	return v.value
}

func (v *NullableDtoGetEventsRequest) Set(val *DtoGetEventsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoGetEventsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoGetEventsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoGetEventsRequest(val *DtoGetEventsRequest) *NullableDtoGetEventsRequest {
	return &NullableDtoGetEventsRequest{value: val, isSet: true}
}

func (v NullableDtoGetEventsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoGetEventsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


