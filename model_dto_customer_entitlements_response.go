/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
)

// checks if the DtoCustomerEntitlementsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCustomerEntitlementsResponse{}

// DtoCustomerEntitlementsResponse struct for DtoCustomerEntitlementsResponse
type DtoCustomerEntitlementsResponse struct {
	CustomerId *string `json:"customer_id,omitempty"`
	Features []DtoAggregatedFeature `json:"features,omitempty"`
}

// NewDtoCustomerEntitlementsResponse instantiates a new DtoCustomerEntitlementsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCustomerEntitlementsResponse() *DtoCustomerEntitlementsResponse {
	this := DtoCustomerEntitlementsResponse{}
	return &this
}

// NewDtoCustomerEntitlementsResponseWithDefaults instantiates a new DtoCustomerEntitlementsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCustomerEntitlementsResponseWithDefaults() *DtoCustomerEntitlementsResponse {
	this := DtoCustomerEntitlementsResponse{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DtoCustomerEntitlementsResponse) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCustomerEntitlementsResponse) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DtoCustomerEntitlementsResponse) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DtoCustomerEntitlementsResponse) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *DtoCustomerEntitlementsResponse) GetFeatures() []DtoAggregatedFeature {
	if o == nil || IsNil(o.Features) {
		var ret []DtoAggregatedFeature
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCustomerEntitlementsResponse) GetFeaturesOk() ([]DtoAggregatedFeature, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *DtoCustomerEntitlementsResponse) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []DtoAggregatedFeature and assigns it to the Features field.
func (o *DtoCustomerEntitlementsResponse) SetFeatures(v []DtoAggregatedFeature) {
	o.Features = v
}

func (o DtoCustomerEntitlementsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCustomerEntitlementsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	return toSerialize, nil
}

type NullableDtoCustomerEntitlementsResponse struct {
	value *DtoCustomerEntitlementsResponse
	isSet bool
}

func (v NullableDtoCustomerEntitlementsResponse) Get() *DtoCustomerEntitlementsResponse {
	return v.value
}

func (v *NullableDtoCustomerEntitlementsResponse) Set(val *DtoCustomerEntitlementsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCustomerEntitlementsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCustomerEntitlementsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCustomerEntitlementsResponse(val *DtoCustomerEntitlementsResponse) *NullableDtoCustomerEntitlementsResponse {
	return &NullableDtoCustomerEntitlementsResponse{value: val, isSet: true}
}

func (v NullableDtoCustomerEntitlementsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCustomerEntitlementsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


