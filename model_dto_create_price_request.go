/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexprice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreatePriceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreatePriceRequest{}

// DtoCreatePriceRequest struct for DtoCreatePriceRequest
type DtoCreatePriceRequest struct {
	Amount *string `json:"amount,omitempty"`
	BillingCadence TypesBillingCadence `json:"billing_cadence"`
	BillingModel TypesBillingModel `json:"billing_model"`
	BillingPeriod TypesBillingPeriod `json:"billing_period"`
	BillingPeriodCount int32 `json:"billing_period_count"`
	Currency string `json:"currency"`
	Description *string `json:"description,omitempty"`
	FilterValues *map[string][]string `json:"filter_values,omitempty"`
	InvoiceCadence TypesInvoiceCadence `json:"invoice_cadence"`
	LookupKey *string `json:"lookup_key,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	MeterId *string `json:"meter_id,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
	TierMode *TypesBillingTier `json:"tier_mode,omitempty"`
	Tiers []DtoCreatePriceTier `json:"tiers,omitempty"`
	TransformQuantity *PriceTransformQuantity `json:"transform_quantity,omitempty"`
	TrialPeriod *int32 `json:"trial_period,omitempty"`
	Type TypesPriceType `json:"type"`
}

type _DtoCreatePriceRequest DtoCreatePriceRequest

// NewDtoCreatePriceRequest instantiates a new DtoCreatePriceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreatePriceRequest(billingCadence TypesBillingCadence, billingModel TypesBillingModel, billingPeriod TypesBillingPeriod, billingPeriodCount int32, currency string, invoiceCadence TypesInvoiceCadence, type_ TypesPriceType) *DtoCreatePriceRequest {
	this := DtoCreatePriceRequest{}
	this.BillingCadence = billingCadence
	this.BillingModel = billingModel
	this.BillingPeriod = billingPeriod
	this.BillingPeriodCount = billingPeriodCount
	this.Currency = currency
	this.InvoiceCadence = invoiceCadence
	this.Type = type_
	return &this
}

// NewDtoCreatePriceRequestWithDefaults instantiates a new DtoCreatePriceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreatePriceRequestWithDefaults() *DtoCreatePriceRequest {
	this := DtoCreatePriceRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *DtoCreatePriceRequest) SetAmount(v string) {
	o.Amount = &v
}

// GetBillingCadence returns the BillingCadence field value
func (o *DtoCreatePriceRequest) GetBillingCadence() TypesBillingCadence {
	if o == nil {
		var ret TypesBillingCadence
		return ret
	}

	return o.BillingCadence
}

// GetBillingCadenceOk returns a tuple with the BillingCadence field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetBillingCadenceOk() (*TypesBillingCadence, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCadence, true
}

// SetBillingCadence sets field value
func (o *DtoCreatePriceRequest) SetBillingCadence(v TypesBillingCadence) {
	o.BillingCadence = v
}

// GetBillingModel returns the BillingModel field value
func (o *DtoCreatePriceRequest) GetBillingModel() TypesBillingModel {
	if o == nil {
		var ret TypesBillingModel
		return ret
	}

	return o.BillingModel
}

// GetBillingModelOk returns a tuple with the BillingModel field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetBillingModelOk() (*TypesBillingModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingModel, true
}

// SetBillingModel sets field value
func (o *DtoCreatePriceRequest) SetBillingModel(v TypesBillingModel) {
	o.BillingModel = v
}

// GetBillingPeriod returns the BillingPeriod field value
func (o *DtoCreatePriceRequest) GetBillingPeriod() TypesBillingPeriod {
	if o == nil {
		var ret TypesBillingPeriod
		return ret
	}

	return o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetBillingPeriodOk() (*TypesBillingPeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingPeriod, true
}

// SetBillingPeriod sets field value
func (o *DtoCreatePriceRequest) SetBillingPeriod(v TypesBillingPeriod) {
	o.BillingPeriod = v
}

// GetBillingPeriodCount returns the BillingPeriodCount field value
func (o *DtoCreatePriceRequest) GetBillingPeriodCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BillingPeriodCount
}

// GetBillingPeriodCountOk returns a tuple with the BillingPeriodCount field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetBillingPeriodCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingPeriodCount, true
}

// SetBillingPeriodCount sets field value
func (o *DtoCreatePriceRequest) SetBillingPeriodCount(v int32) {
	o.BillingPeriodCount = v
}

// GetCurrency returns the Currency field value
func (o *DtoCreatePriceRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *DtoCreatePriceRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DtoCreatePriceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFilterValues returns the FilterValues field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetFilterValues() map[string][]string {
	if o == nil || IsNil(o.FilterValues) {
		var ret map[string][]string
		return ret
	}
	return *o.FilterValues
}

// GetFilterValuesOk returns a tuple with the FilterValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetFilterValuesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.FilterValues) {
		return nil, false
	}
	return o.FilterValues, true
}

// HasFilterValues returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasFilterValues() bool {
	if o != nil && !IsNil(o.FilterValues) {
		return true
	}

	return false
}

// SetFilterValues gets a reference to the given map[string][]string and assigns it to the FilterValues field.
func (o *DtoCreatePriceRequest) SetFilterValues(v map[string][]string) {
	o.FilterValues = &v
}

// GetInvoiceCadence returns the InvoiceCadence field value
func (o *DtoCreatePriceRequest) GetInvoiceCadence() TypesInvoiceCadence {
	if o == nil {
		var ret TypesInvoiceCadence
		return ret
	}

	return o.InvoiceCadence
}

// GetInvoiceCadenceOk returns a tuple with the InvoiceCadence field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetInvoiceCadenceOk() (*TypesInvoiceCadence, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceCadence, true
}

// SetInvoiceCadence sets field value
func (o *DtoCreatePriceRequest) SetInvoiceCadence(v TypesInvoiceCadence) {
	o.InvoiceCadence = v
}

// GetLookupKey returns the LookupKey field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetLookupKey() string {
	if o == nil || IsNil(o.LookupKey) {
		var ret string
		return ret
	}
	return *o.LookupKey
}

// GetLookupKeyOk returns a tuple with the LookupKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetLookupKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LookupKey) {
		return nil, false
	}
	return o.LookupKey, true
}

// HasLookupKey returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasLookupKey() bool {
	if o != nil && !IsNil(o.LookupKey) {
		return true
	}

	return false
}

// SetLookupKey gets a reference to the given string and assigns it to the LookupKey field.
func (o *DtoCreatePriceRequest) SetLookupKey(v string) {
	o.LookupKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoCreatePriceRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMeterId returns the MeterId field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetMeterId() string {
	if o == nil || IsNil(o.MeterId) {
		var ret string
		return ret
	}
	return *o.MeterId
}

// GetMeterIdOk returns a tuple with the MeterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetMeterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MeterId) {
		return nil, false
	}
	return o.MeterId, true
}

// HasMeterId returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasMeterId() bool {
	if o != nil && !IsNil(o.MeterId) {
		return true
	}

	return false
}

// SetMeterId gets a reference to the given string and assigns it to the MeterId field.
func (o *DtoCreatePriceRequest) SetMeterId(v string) {
	o.MeterId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *DtoCreatePriceRequest) SetPlanId(v string) {
	o.PlanId = &v
}

// GetTierMode returns the TierMode field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetTierMode() TypesBillingTier {
	if o == nil || IsNil(o.TierMode) {
		var ret TypesBillingTier
		return ret
	}
	return *o.TierMode
}

// GetTierModeOk returns a tuple with the TierMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetTierModeOk() (*TypesBillingTier, bool) {
	if o == nil || IsNil(o.TierMode) {
		return nil, false
	}
	return o.TierMode, true
}

// HasTierMode returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasTierMode() bool {
	if o != nil && !IsNil(o.TierMode) {
		return true
	}

	return false
}

// SetTierMode gets a reference to the given TypesBillingTier and assigns it to the TierMode field.
func (o *DtoCreatePriceRequest) SetTierMode(v TypesBillingTier) {
	o.TierMode = &v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetTiers() []DtoCreatePriceTier {
	if o == nil || IsNil(o.Tiers) {
		var ret []DtoCreatePriceTier
		return ret
	}
	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetTiersOk() ([]DtoCreatePriceTier, bool) {
	if o == nil || IsNil(o.Tiers) {
		return nil, false
	}
	return o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given []DtoCreatePriceTier and assigns it to the Tiers field.
func (o *DtoCreatePriceRequest) SetTiers(v []DtoCreatePriceTier) {
	o.Tiers = v
}

// GetTransformQuantity returns the TransformQuantity field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetTransformQuantity() PriceTransformQuantity {
	if o == nil || IsNil(o.TransformQuantity) {
		var ret PriceTransformQuantity
		return ret
	}
	return *o.TransformQuantity
}

// GetTransformQuantityOk returns a tuple with the TransformQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetTransformQuantityOk() (*PriceTransformQuantity, bool) {
	if o == nil || IsNil(o.TransformQuantity) {
		return nil, false
	}
	return o.TransformQuantity, true
}

// HasTransformQuantity returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasTransformQuantity() bool {
	if o != nil && !IsNil(o.TransformQuantity) {
		return true
	}

	return false
}

// SetTransformQuantity gets a reference to the given PriceTransformQuantity and assigns it to the TransformQuantity field.
func (o *DtoCreatePriceRequest) SetTransformQuantity(v PriceTransformQuantity) {
	o.TransformQuantity = &v
}

// GetTrialPeriod returns the TrialPeriod field value if set, zero value otherwise.
func (o *DtoCreatePriceRequest) GetTrialPeriod() int32 {
	if o == nil || IsNil(o.TrialPeriod) {
		var ret int32
		return ret
	}
	return *o.TrialPeriod
}

// GetTrialPeriodOk returns a tuple with the TrialPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetTrialPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPeriod) {
		return nil, false
	}
	return o.TrialPeriod, true
}

// HasTrialPeriod returns a boolean if a field has been set.
func (o *DtoCreatePriceRequest) HasTrialPeriod() bool {
	if o != nil && !IsNil(o.TrialPeriod) {
		return true
	}

	return false
}

// SetTrialPeriod gets a reference to the given int32 and assigns it to the TrialPeriod field.
func (o *DtoCreatePriceRequest) SetTrialPeriod(v int32) {
	o.TrialPeriod = &v
}

// GetType returns the Type field value
func (o *DtoCreatePriceRequest) GetType() TypesPriceType {
	if o == nil {
		var ret TypesPriceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DtoCreatePriceRequest) GetTypeOk() (*TypesPriceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DtoCreatePriceRequest) SetType(v TypesPriceType) {
	o.Type = v
}

func (o DtoCreatePriceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreatePriceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["billing_cadence"] = o.BillingCadence
	toSerialize["billing_model"] = o.BillingModel
	toSerialize["billing_period"] = o.BillingPeriod
	toSerialize["billing_period_count"] = o.BillingPeriodCount
	toSerialize["currency"] = o.Currency
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FilterValues) {
		toSerialize["filter_values"] = o.FilterValues
	}
	toSerialize["invoice_cadence"] = o.InvoiceCadence
	if !IsNil(o.LookupKey) {
		toSerialize["lookup_key"] = o.LookupKey
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MeterId) {
		toSerialize["meter_id"] = o.MeterId
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.TierMode) {
		toSerialize["tier_mode"] = o.TierMode
	}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	if !IsNil(o.TransformQuantity) {
		toSerialize["transform_quantity"] = o.TransformQuantity
	}
	if !IsNil(o.TrialPeriod) {
		toSerialize["trial_period"] = o.TrialPeriod
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *DtoCreatePriceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billing_cadence",
		"billing_model",
		"billing_period",
		"billing_period_count",
		"currency",
		"invoice_cadence",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreatePriceRequest := _DtoCreatePriceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreatePriceRequest)

	if err != nil {
		return err
	}

	*o = DtoCreatePriceRequest(varDtoCreatePriceRequest)

	return err
}

type NullableDtoCreatePriceRequest struct {
	value *DtoCreatePriceRequest
	isSet bool
}

func (v NullableDtoCreatePriceRequest) Get() *DtoCreatePriceRequest {
	return v.value
}

func (v *NullableDtoCreatePriceRequest) Set(val *DtoCreatePriceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreatePriceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreatePriceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreatePriceRequest(val *DtoCreatePriceRequest) *NullableDtoCreatePriceRequest {
	return &NullableDtoCreatePriceRequest{value: val, isSet: true}
}

func (v NullableDtoCreatePriceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreatePriceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


