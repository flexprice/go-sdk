/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoResumeSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoResumeSubscriptionRequest{}

// DtoResumeSubscriptionRequest struct for DtoResumeSubscriptionRequest
type DtoResumeSubscriptionRequest struct {
	DryRun *bool `json:"dry_run,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	ResumeMode TypesResumeMode `json:"resume_mode"`
}

type _DtoResumeSubscriptionRequest DtoResumeSubscriptionRequest

// NewDtoResumeSubscriptionRequest instantiates a new DtoResumeSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoResumeSubscriptionRequest(resumeMode TypesResumeMode) *DtoResumeSubscriptionRequest {
	this := DtoResumeSubscriptionRequest{}
	this.ResumeMode = resumeMode
	return &this
}

// NewDtoResumeSubscriptionRequestWithDefaults instantiates a new DtoResumeSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoResumeSubscriptionRequestWithDefaults() *DtoResumeSubscriptionRequest {
	this := DtoResumeSubscriptionRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DtoResumeSubscriptionRequest) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoResumeSubscriptionRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DtoResumeSubscriptionRequest) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DtoResumeSubscriptionRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DtoResumeSubscriptionRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoResumeSubscriptionRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DtoResumeSubscriptionRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DtoResumeSubscriptionRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetResumeMode returns the ResumeMode field value
func (o *DtoResumeSubscriptionRequest) GetResumeMode() TypesResumeMode {
	if o == nil {
		var ret TypesResumeMode
		return ret
	}

	return o.ResumeMode
}

// GetResumeModeOk returns a tuple with the ResumeMode field value
// and a boolean to check if the value has been set.
func (o *DtoResumeSubscriptionRequest) GetResumeModeOk() (*TypesResumeMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResumeMode, true
}

// SetResumeMode sets field value
func (o *DtoResumeSubscriptionRequest) SetResumeMode(v TypesResumeMode) {
	o.ResumeMode = v
}

func (o DtoResumeSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoResumeSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DryRun) {
		toSerialize["dry_run"] = o.DryRun
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["resume_mode"] = o.ResumeMode
	return toSerialize, nil
}

func (o *DtoResumeSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resume_mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoResumeSubscriptionRequest := _DtoResumeSubscriptionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoResumeSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = DtoResumeSubscriptionRequest(varDtoResumeSubscriptionRequest)

	return err
}

type NullableDtoResumeSubscriptionRequest struct {
	value *DtoResumeSubscriptionRequest
	isSet bool
}

func (v NullableDtoResumeSubscriptionRequest) Get() *DtoResumeSubscriptionRequest {
	return v.value
}

func (v *NullableDtoResumeSubscriptionRequest) Set(val *DtoResumeSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoResumeSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoResumeSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoResumeSubscriptionRequest(val *DtoResumeSubscriptionRequest) *NullableDtoResumeSubscriptionRequest {
	return &NullableDtoResumeSubscriptionRequest{value: val, isSet: true}
}

func (v NullableDtoResumeSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoResumeSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


