/*
FlexPrice API

FlexPrice API Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flexpriceclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DtoCreateAPIKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateAPIKeyRequest{}

// DtoCreateAPIKeyRequest struct for DtoCreateAPIKeyRequest
type DtoCreateAPIKeyRequest struct {
	ExpiresAt *string `json:"expires_at,omitempty"`
	Name string `json:"name"`
	Permissions []string `json:"permissions,omitempty"`
	Type TypesSecretType `json:"type"`
}

type _DtoCreateAPIKeyRequest DtoCreateAPIKeyRequest

// NewDtoCreateAPIKeyRequest instantiates a new DtoCreateAPIKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateAPIKeyRequest(name string, type_ TypesSecretType) *DtoCreateAPIKeyRequest {
	this := DtoCreateAPIKeyRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewDtoCreateAPIKeyRequestWithDefaults instantiates a new DtoCreateAPIKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateAPIKeyRequestWithDefaults() *DtoCreateAPIKeyRequest {
	this := DtoCreateAPIKeyRequest{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *DtoCreateAPIKeyRequest) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateAPIKeyRequest) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DtoCreateAPIKeyRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *DtoCreateAPIKeyRequest) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetName returns the Name field value
func (o *DtoCreateAPIKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DtoCreateAPIKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DtoCreateAPIKeyRequest) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *DtoCreateAPIKeyRequest) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateAPIKeyRequest) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *DtoCreateAPIKeyRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *DtoCreateAPIKeyRequest) SetPermissions(v []string) {
	o.Permissions = v
}

// GetType returns the Type field value
func (o *DtoCreateAPIKeyRequest) GetType() TypesSecretType {
	if o == nil {
		var ret TypesSecretType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DtoCreateAPIKeyRequest) GetTypeOk() (*TypesSecretType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DtoCreateAPIKeyRequest) SetType(v TypesSecretType) {
	o.Type = v
}

func (o DtoCreateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateAPIKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *DtoCreateAPIKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateAPIKeyRequest := _DtoCreateAPIKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateAPIKeyRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateAPIKeyRequest(varDtoCreateAPIKeyRequest)

	return err
}

type NullableDtoCreateAPIKeyRequest struct {
	value *DtoCreateAPIKeyRequest
	isSet bool
}

func (v NullableDtoCreateAPIKeyRequest) Get() *DtoCreateAPIKeyRequest {
	return v.value
}

func (v *NullableDtoCreateAPIKeyRequest) Set(val *DtoCreateAPIKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateAPIKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateAPIKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateAPIKeyRequest(val *DtoCreateAPIKeyRequest) *NullableDtoCreateAPIKeyRequest {
	return &NullableDtoCreateAPIKeyRequest{value: val, isSet: true}
}

func (v NullableDtoCreateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateAPIKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


